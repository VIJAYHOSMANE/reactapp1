(window.webpackJsonp=window.webpackJsonp||[]).push([[311],{"5jBj":function(e,n){e.exports='# \u0427\u0430\u0441\u0442\u043e \u0437\u0430\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b (FAQ)\n\n<p class="description">\u0417\u0430\u0441\u0442\u0440\u044f\u043b\u0438 \u043d\u0430 \u0447\u0451\u043c-\u0442\u043e? \u0413\u043b\u044f\u043d\u044c\u0442\u0435 \u0441\u043f\u0435\u0440\u0432\u0430 \u043d\u0430 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0438\u043f\u0438\u0447\u043d\u044b\u0445 \u0433\u0440\u0430\u0431\u043b\u0435\u0439 \u0437\u0434\u0435\u0441\u044c.</p>\n\n\u0418 \u0435\u0441\u043b\u0438 \u0432\u0441\u0451-\u0442\u0430\u043a\u0438 \u0437\u0434\u0435\u0441\u044c \u043d\u0435 \u043d\u0430\u0439\u0434\u0451\u0442\u0441\u044f \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b, \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a [\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438](/getting-started/support/).\n\n## Material-UI \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435\u0447\u0442\u043e. \u041a\u0430\u043a \u044f \u043c\u043e\u0433\u0443 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043f\u0440\u043e\u0435\u043a\u0442?\n\n\u0421\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044c Material-UI \u043c\u043d\u043e\u0433\u043e:\n\n- **\u0413\u043e\u0432\u043e\u0440\u0438\u0442\u0435 \u043e \u043d\u0430\u0441**. \u041f\u0440\u043e\u0434\u0432\u0438\u0433\u0430\u0439\u0442\u0435 Material-UI \u0432 \u043c\u0430\u0441\u0441\u044b: \u0440\u0430\u0437\u043c\u0435\u0441\u0442\u0438\u0442\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 [material-ui.com](https://mui.com/) \u043d\u0430 \u0441\u0432\u043e\u0451\u043c \u0441\u0430\u0439\u0442\u0435, \u043a\u0430\u0436\u0434\u043e\u0435 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435. \u0417\u0430\u0444\u043e\u043b\u043b\u043e\u0432\u044c\u0442\u0435 \u043d\u0430\u0441 \u0432 [\u0422\u0432\u0438\u0442\u0442\u0435\u0440\u0435](https://twitter.com/MaterialUI), \u043b\u0430\u0439\u043a\u0430\u0439\u0442\u0435 \u0438 \u0440\u0435\u0442\u0432\u0438\u0442\u044c\u0442\u0435 \u0437\u043d\u0430\u0447\u0438\u043c\u044b\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0438. \u0418\u043b\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0438\u0442\u0435 \u043e \u043d\u0430\u0441 \u0434\u0440\u0443\u0437\u044c\u044f\u043c.\n- **\u0414\u0435\u043b\u0438\u0442\u0435\u0441\u044c \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438 \u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438**. \u0413\u043e\u0432\u043e\u0440\u0438\u0442\u0435, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u0445\u043e\u0440\u043e\u0448\u043e, \u0430 \u0433\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u0438 \u043f\u043e\u043b\u0443\u0447\u0448\u0435. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043b\u044e\u0441\u0443\u0439\u0442\u0435 (\ud83d\udc4d) \u0442\u0438\u043a\u0435\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0430\u043c \u0445\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0431\u044b \u043f\u043e\u0441\u043a\u043e\u0440\u0435\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0440\u0435\u0448\u0451\u043d\u043d\u044b\u043c\u0438.\n- **\u041f\u043e\u043c\u043e\u0433\u0430\u0439\u0442\u0435 \u043d\u043e\u0432\u0438\u0447\u043a\u0430\u043c**. \u041f\u043e\u043e\u0442\u0432\u0435\u0447\u0430\u0439\u0442\u0435 \u043d\u0430 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u043d\u0430 [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui).\n- **\u0414\u0432\u0438\u0433\u0430\u0439\u0442\u0435 \u043f\u0440\u043e\u0435\u043a\u0442 \u0432\u043f\u0435\u0440\u0451\u0434**. \n  - Edit the documentation. Every page has an "EDIT THIS PAGE" link in the top right.\n  - \u041f\u0440\u0438\u0441\u044b\u043b\u0430\u0439\u0442\u0435 \u0431\u0430\u0433\u0440\u0435\u043f\u043e\u0440\u0442\u044b \u0438 \u0444\u0438\u0447\u0440\u0435\u043a\u0432\u0435\u0441\u0442\u044b [\u0447\u0435\u0440\u0435\u0437 \u0442\u0438\u043a\u0435\u0442\u044b](https://github.com/mui-org/material-ui/issues/new).\n  - Review and comment on existing [pull requests](https://github.com/mui-org/material-ui/pulls) and [issues](https://github.com/mui-org/material-ui/issues).\n  - \u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 [\u043f\u0435\u0440\u0435\u0432\u0435\u0441\u0442\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e](https://translate.material-ui.com).\n  - [Improve our documentation](https://github.com/mui-org/material-ui/tree/master/docs), fix bugs, or add features by [submitting a pull request](https://github.com/mui-org/material-ui/pulls).\n- **\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0442\u0435 \u043d\u0430\u0441 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e \u043d\u0430 [OpenCollective](https://opencollective.com/material-ui)**. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0435 Material-UI \u0432 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u0438\u0445 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430\u0445 \u0438 \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043f\u043e\u043d\u0441\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0443\u044e \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435, \u0438\u043b\u0438 \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u043b\u0438\u0447\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442, \u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u043e\u0441\u0438\u043b\u044c\u043d\u044b\u0439 \u0432\u043a\u043b\u0430\u0434, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f OpenCollective. \u041c\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0430\u0435\u043c, \u043d\u0430 \u0447\u0442\u043e \u0443\u0445\u043e\u0434\u044f\u0442 \u043f\u043e\u0436\u0435\u0440\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u044f, \u0430 \u0441\u043f\u043e\u043d\u0441\u043e\u0440\u0430\u043c \u0434\u043e\u0441\u0442\u0430\u0451\u0442\u0441\u044f \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u0435 \u0432 README \u0438 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 Material-UI.\n\n## \u041f\u043e\u0447\u0435\u043c\u0443 \u043c\u043e\u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u043d\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0432 \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u043d-\u0441\u0431\u043e\u0440\u043a\u0430\u0445?\n\nBut you shouldn\'t share a `createGenerateClassName()` between different requests: You need to provide a new class name generator for each request.\n\nTo correct this issue, all components on the page need to be initialized such that there is only ever **one class name generator** among them.\n\n\u0414\u0432\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0438\u043c\u0435\u043d \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u044f\u0445:\n\n- \u0412\u044b \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u0434\u0432\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 Material-UI \u0432 **\u043f\u0430\u043a\u0435\u0442\u0435**. \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c, \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044e\u0449\u0430\u044f Material-UI \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0434\u043d\u043e\u0440\u0430\u043d\u0433\u043e\u0432\u043e\u0439 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438.\n- You are using `StylesProvider` for a **subset** of your React tree.\n- \u0412\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u0441\u0431\u043e\u0440\u0449\u0438\u043a, \u0438 \u043e\u043d \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0434 \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0447\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440\u0430 \u0438\u043c\u0435\u043d \u043a\u043b\u0430\u0441\u0441\u043e\u0432.\n\n> \u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 webpack \u0441 [SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/), \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c [`runtimeChunk` \u0432 \u0441\u0435\u043a\u0446\u0438\u0438 `optimizations`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk).\n\nOverall, it\'s simple to recover from this problem by wrapping each Material-UI application with [`StylesProvider`](/styles/api/#stylesprovider) components at the top of their component trees **and using a single class name generator shared among them**.\n\n## Why do the fixed positioned elements move when a modal is opened?\n\nScrolling is blocked as soon as a modal is opened. This prevents interacting with the background when the modal should be the only interactive content. However, removing the scrollbar can make your **fixed positioned elements** move. In this situation, you can apply a global `.mui-fixed` class name to tell Material-UI to handle those elements.\n\n## How can I disable the ripple effect globally?\n\nThe ripple effect is exclusively coming from the `BaseButton` component. You can disable the ripple effect globally by providing the following in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // Name of the component \u269b\ufe0f\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application \ud83d\udca3!\n    },\n  },\n});\n```\n\n## \u041a\u0430\u043a \u044f \u043c\u043e\u0433\u0443 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c transitions \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e?\n\nMaterial-UI uses the same theme helper for creating all its transitions. Therefore you can disable all transitions by overriding the helper in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // Ent\xe3o temos `transition: none;` everywhere\n    create: () => \'none\',\n  },\n});\n```\n\nIt can be useful to disable transitions during visual testing or to improve performance on low-end devices.\n\nYou can go one step further by disabling all transitions and animations effects:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // Name of the component \u269b\ufe0f\n    MuiCssBaseline: {\n      // Name of the rule\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\nNotice that the usage of `CssBaseline` is required for the above approach to work. If you choose not to use it, you can still disable transitions and animations by including these CSS rules:\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## \u0414\u043e\u043b\u0436\u0435\u043d \u043b\u0438 \u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c JSS \u0434\u043b\u044f \u0441\u0442\u0438\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0432\u043e\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f?\n\nNo, it\'s not required. But this dependency comes built in, so carries no additional bundle size overhead.\n\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\n## When should I use inline-style vs CSS?\n\nAs a rule of thumb, only use inline-style for dynamic style properties. The CSS alternative provides more advantages, such as:\n\n- auto-prefixing\n- better debugging\n- \u043c\u0435\u0434\u0438\u0430-\u0437\u0430\u043f\u0440\u043e\u0441\u044b\n- \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043a\u0430\u0434\u0440\u044b\n\n## \u041a\u0430\u043a \u043c\u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c react-router?\n\nWe detail the [integration with third-party routing libraries](/guides/composition/#routing-libraries) like react-router, Gatsby or Next.js in our guide.\n\n## \u041a\u0430\u043a \u044f \u043c\u043e\u0433\u0443 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 DOM?\n\nAll Material-UI components that should render something in the DOM forward their ref to the underlying DOM component. This means that you can get DOM elements by reading the ref attached to Material-UI components:\n\n```jsx\n// or a ref setter function\nconst ref = React.createRef();\n// render\n<Button ref={ref} />;\n// usage\nconst element = ref.current;\n```\n\nIf you\'re not sure if the Material-UI component in question forwards its ref you can check the API documentation under "Props" e.g. the [Button API](/api/button/#props) includes\n\n> The ref is forwarded to the root element.\n\nindicating that you can access the DOM element with a ref.\n\n## I have several instances of styles on the page\n\nIf you are seeing a warning message in the console like the one below, you probably have several instances of `@material-ui/styles` initialized on the page.\n\n> It looks like there are several instances of `@material-ui/styles` initialized in this application. This may cause theme propagation issues, broken class names, specificity issues, and make your application bigger without a good reason.\n\n### \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u044b\n\n\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0447\u0438\u043d \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e:\n\n- You have another `@material-ui/styles` library somewhere in your dependencies.\n- You have a monorepo structure for your project (e.g, lerna, yarn workspaces) and `@material-ui/styles` module is a dependency in more than one package (this one is more or less the same as the previous one).\n- You have several applications that are using `@material-ui/styles` running on the same page (e.g., several entry points in webpack are loaded on the same page).\n\n### Duplicated module in node_modules\n\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\nIf none of these commands identified the duplication, try analyzing your bundle for multiple instances of @material-ui/styles. You can just check your bundle source, or use a tool like [source-map-explorer](https://github.com/danvk/source-map-explorer) or [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer).\n\nIf you identified that duplication is the issue that you are encountering there are several things you can try to solve it:\n\nIf you are using npm you can try running `npm dedupe`. This command searches the local dependencies and tries to simplify the structure by moving common dependencies further up the tree.\n\nIf you are using webpack, you can change the way it will [resolve](https://webpack.js.org/configuration/resolve/#resolve-modules) the @material-ui/styles module. You can overwrite the default order in which webpack will look for your dependencies and make your application node_modules more prioritized than default node module resolution order:\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### Usage with Lerna\n\nOne possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file. Try running the bootstrap option with the --hoist flag.\n\n```sh\nlerna bootstrap --hoist\n```\n\nAlternatively, you can remove @material-ui/styles from your package.json file and hoist it manually to your top-level package.json file.\n\nExample of a package.json file in a Lerna root folder\n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### Running multiple applications on one page\n\nIf you have several applications running on one page, consider using one @material-ui/styles module for all of them. If you are using webpack, you can use [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/) to create an explicit [vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), that will contain the @material-ui/styles module:\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## My App doesn\'t render correctly on the server\n\nIf it doesn\'t work, in 99% of cases it\'s a configuration issue. A missing property, a wrong call order, or a missing component \u2013 server-side rendering is strict about configuration, and the best way to find out what\'s wrong is to compare your project to an already working setup. Check out the [reference implementations](/guides/server-rendering/#reference-implementations), bit by bit.\n\n### CSS works only on first load then is missing\n\nThe CSS is only generated on the first load of the page. Then, the CSS is missing on the server for consecutive requests.\n\n#### Action to Take\n\nThe styling solution relies on a cache, the *sheets manager*, to only inject the CSS once per component type (if you use two buttons, you only need the CSS of the button one time). You need to create **a new `sheets` instance for each request**.\n\n*example of fix:*\n\n```diff\n-const sheets = new ServerStyleSheets();\n\nfunction handleRender(req, res) {\n\n+ // Create a sheets instance.\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // Render the component to a string.\nconst html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  -// Create a sheets instance.\n```\n\n### React class name hydration mismatch\n\nThere is a class name mismatch between the client and the server. It might work for the first request. Another symptom is that the styling changes between initial page load and the downloading of the client scripts.\n\n#### Action to Take\n\nThe class names value relies on the concept of [class name generator](/styles/advanced/#class-names). The whole page needs to be rendered with **a single generator**. This generator needs to behave identically on the server and on the client. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\n\n- You need to provide a new class name generator for each request. But you shouldn\'t share a `createGenerateClassName()` between different requests:\n\n*example of fix:*\n\n```diff\n-// Create a new class name generator.\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n\n+ // Create a new class name generator.\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // Render the component to a string.\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  -// Create a sheets instance.\n```\n\n- You need to verify that your client and server are running the **exactly the same version** of Material-UI. It is possible that a mismatch of even minor versions can cause styling problems. To check version numbers, run `npm list @material-ui/core` in the environment where you build your application and also in your deployment environment.\n  \n    You can also ensure the same version in different environments by specifying a specific MUI version in the dependencies of your package.json.\n\n*example of fix (package.json):*\n\n```diff\n  "dependencies": {\n    ...\n\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- You need to make sure that the server and the client share the same `process.env.NODE_ENV` value.\n\n## Why are the colors I am seeing different from what I see here?\n\n\u0421\u0430\u0439\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u0442\u0435\u043c\u0443. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u0446\u0432\u0435\u0442\u043e\u0432\u0430\u044f \u043f\u0430\u043b\u0438\u0442\u0440\u0430 \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u0442\u0435\u043c\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 Material-UI. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a [\u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435](/customization/theming/), \u0447\u0442\u043e\u0431\u044b \u0443\u0437\u043d\u0430\u0442\u044c \u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0435 \u0442\u0435\u043c\u044b.\n\n## Why does component X require a DOM node in a prop instead of a ref object?\n\nComponents like the [Portal](/api/portal/#props) or [Popper](/api/popper/#props) require a DOM node in the `container` or `anchorEl` prop respectively. It seems convenient to simply pass a ref object in those props and let Material-UI access the current value. This works in a simple scenario:\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>portaled children</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\nwhere `Portal` would only mount the children into the container when `container.current` is available. Here is a naive implementation of Portal:\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\nWith this simple heuristic `Portal` might re-render after it mounts because refs are up-to-date before any effects run. However, just because a ref is up-to-date doesn\'t mean it points to a defined instance. If the ref is attached to a ref forwarding component it is not clear when the DOM node will be available. The above implementation could also not account for a change in the DOM node. In the example above, the `Portal` would run an effect once, but might not re-render because `ref.current` is still `null`. This is especially apparent for React.lazy components in Suspense.\n\nThis is why we require a prop with the actual DOM node so that React can take care of determining when the `Portal` should re-render:\n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Portaled</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## What\'s the clsx dependency for?\n\n[clsx](https://github.com/lukeed/clsx) is a tiny utility for constructing `className` strings conditionally, out of an object with keys being the class strings, and values being booleans.\n\nInstead of writing:\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? // let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ?\n```\n\nyou can do:\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```'},EgeP:function(e,n){e.exports='# Preguntas frecuentes\n\n<p class="description">\xbfAtrapado en un problema en particular? Chequea primero algunos de los problemas m\xe1s comunes en la secci\xf3n de preguntas frecuentes.</p>\n\nSi a\xfan no puede encontrar lo que est\xe1 buscando, puede consultar nuestra [p\xe1gina de soporte](/getting-started/support/).\n\n## Material-UI es impresionante. \xbfC\xf3mo puedo apoyar el proyecto?\n\nHay muchas maneras de apoyar a Material-UI:\n\n- **Difunde la palabra**. Evangelize Material-UI by [linking to material-ui.com](https://mui.com/) on your website, every backlink matters. Follow us on [Twitter](https://twitter.com/MaterialUI), like and retweet the important news. Or just talk about us with your friends.\n- **Give us feedback**. Tell us what we\'re doing well or where we can improve. Please upvote (\ud83d\udc4d) the issues that you are the most interested in seeing solved.\n- **Ayuda a nuevos usuarios**. Puedes responder preguntas en [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui).\n- **Haz que los cambios sucedan**. \n  - Edit the documentation. Every page has an "EDIT THIS PAGE" link in the top right.\n  - Report bugs or missing features by [creating an issue](https://github.com/mui-org/material-ui/issues/new).\n  - Review and comment on existing [pull requests](https://github.com/mui-org/material-ui/pulls) and [issues](https://github.com/mui-org/material-ui/issues).\n  - Help [translate](https://translate.material-ui.com) the documentation.\n  - [Improve our documentation](https://github.com/mui-org/material-ui/tree/master/docs), fix bugs, or add features by [submitting a pull request](https://github.com/mui-org/material-ui/pulls).\n- **Ap\xf3yanos financieramente en [OpenCollective](https://opencollective.com/material-ui)**. If you use Material-UI in a commercial project and would like to support its continued development by becoming a Sponsor, or in a side or hobby project and would like to become a Backer, you can do so through OpenCollective. All funds donated are managed transparently, and Sponsors receive recognition in the README and on the Material-UI home page.\n\n## \xbfPor qu\xe9 mis componentes no se est\xe1n renderizando correctamente en las compilaciones de producci\xf3n?\n\nBut you shouldn\'t share a `createGenerateClassName()` between different requests: You need to provide a new class name generator for each request.\n\nPara corregir este problema, todos los componentes de la p\xe1gina deben inicializarse de forma que s\xf3lo haya **un generador de nombre de clase** entre ellos.\n\nUsted podr\xeda terminar usando accidentalmente dos generadores de nombre de clase en una variedad de escenarios:\n\n- Usted accidentalmente **ata** dos versiones de Material-UI. Es posible que usted tenga una dependencia que no establece correctamente Material-UI como una dependencia en par.\n- Est\xe1s usando `StylesProvider` para un **subconjunto** de tu \xe1rbol React.\n- Usted est\xe1 utilizando un agrupador que est\xe1 dividiendo el c\xf3digo en una manera que crea m\xfaltiples instancias de generador de nombre de clase.\n\n> If you are using webpack with the [SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/), try configuring the [`runtimeChunk` setting under `optimizations`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk).\n\nOverall, it\'s simple to recover from this problem by wrapping each Material-UI application with [`StylesProvider`](/styles/api/#stylesprovider) components at the top of their component trees **and using a single class name generator shared among them**.\n\n## \xbfPor qu\xe9 los elementos de posici\xf3n fija se mueven cuando se abre un modal?\n\nScrolling is blocked as soon as a modal is opened. This prevents interacting with the background when the modal should be the only interactive content. However, removing the scrollbar can make your **fixed positioned elements** move. In this situation, you can apply a global `.mui-fixed` class name to tell Material-UI to handle those elements.\n\n## \xbfC\xf3mo puedo desactivar el efecto de ripple globalmente?\n\nThe ripple effect is exclusively coming from the `BaseButton` component. You can disable the ripple effect globally by providing the following in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // Name of the component \u269b\ufe0f\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application \ud83d\udca3!\n    },\n  },\n});\n```\n\n## \xbfC\xf3mo puedo desactivar las transiciones globalmente?\n\nMaterial-UI uses the same theme helper for creating all its transitions. Therefore you can disable all transitions by overriding the helper in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // Ent\xe3o temos `transition: none;` everywhere\n    create: () => \'none\',\n  },\n});\n```\n\nIt can be useful to disable transitions during visual testing or to improve performance on low-end devices.\n\nYou can go one step further by disabling all transitions and animations effects:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // Name of the component \u269b\ufe0f\n    MuiCssBaseline: {\n      // Name of the rule\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\nNotice that the usage of `CssBaseline` is required for the above approach to work. If you choose not to use it, you can still disable transitions and animations by including these CSS rules:\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## \xbfTengo que usar JSS para dar estilo a mi aplicaci\xf3n?\n\nNo, it\'s not required. But this dependency comes built in, so carries no additional bundle size overhead.\n\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\n## When should I use inline-style vs CSS?\n\nAs a rule of thumb, only use inline-style for dynamic style properties. The CSS alternative provides more advantages, such as:\n\n- auto-prefixing\n- better debugging\n- media queries\n- keyframes\n\n## \xbfC\xf3mo uso react-router?\n\nWe detail the [integration with third-party routing libraries](/guides/composition/#routing-libraries) like react-router, Gatsby or Next.js in our guide.\n\n## \xbfC\xf3mo puedo acceder al elemento DOM?\n\nAll Material-UI components that should render something in the DOM forward their ref to the underlying DOM component. This means that you can get DOM elements by reading the ref attached to Material-UI components:\n\n```jsx\n// or a ref setter function\nconst ref = React.createRef();\n// render\n<Button ref={ref} />;\n// usage\nconst element = ref.current;\n```\n\nIf you\'re not sure if the Material-UI component in question forwards its ref you can check the API documentation under "Props" e.g. the [Button API](/api/button/#props) includes\n\n> The ref is forwarded to the root element.\n\nindicating that you can access the DOM element with a ref.\n\n## I have several instances of styles on the page\n\nIf you are seeing a warning message in the console like the one below, you probably have several instances of `@material-ui/styles` initialized on the page.\n\n> It looks like there are several instances of `@material-ui/styles` initialized in this application. This may cause theme propagation issues, broken class names, specificity issues, and make your application bigger without a good reason.\n\n### Possible reasons\n\nThere are several common reasons for this to happen:\n\n- You have another `@material-ui/styles` library somewhere in your dependencies.\n- You have a monorepo structure for your project (e.g, lerna, yarn workspaces) and `@material-ui/styles` module is a dependency in more than one package (this one is more or less the same as the previous one).\n- You have several applications that are using `@material-ui/styles` running on the same page (e.g., several entry points in webpack are loaded on the same page).\n\n### Duplicated module in node_modules\n\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\nIf none of these commands identified the duplication, try analyzing your bundle for multiple instances of @material-ui/styles. You can just check your bundle source, or use a tool like [source-map-explorer](https://github.com/danvk/source-map-explorer) or [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer).\n\nIf you identified that duplication is the issue that you are encountering there are several things you can try to solve it:\n\nIf you are using npm you can try running `npm dedupe`. This command searches the local dependencies and tries to simplify the structure by moving common dependencies further up the tree.\n\nIf you are using webpack, you can change the way it will [resolve](https://webpack.js.org/configuration/resolve/#resolve-modules) the @material-ui/styles module. You can overwrite the default order in which webpack will look for your dependencies and make your application node_modules more prioritized than default node module resolution order:\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### Usage with Lerna\n\nOne possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file. Try running the bootstrap option with the --hoist flag.\n\n```sh\nlerna bootstrap --hoist\n```\n\nAlternatively, you can remove @material-ui/styles from your package.json file and hoist it manually to your top-level package.json file.\n\nExample of a package.json file in a Lerna root folder\n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### Running multiple applications on one page\n\nIf you have several applications running on one page, consider using one @material-ui/styles module for all of them. If you are using webpack, you can use [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/) to create an explicit [vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), that will contain the @material-ui/styles module:\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## Mi aplicaci\xf3n no se procesa correctamente en el servidor\n\nIf it doesn\'t work, in 99% of cases it\'s a configuration issue. A missing property, a wrong call order, or a missing component \u2013 server-side rendering is strict about configuration, and the best way to find out what\'s wrong is to compare your project to an already working setup. Check out the [reference implementations](/guides/server-rendering/#reference-implementations), bit by bit.\n\n### CSS works only on first load then is missing\n\nThe CSS is only generated on the first load of the page. Then, the CSS is missing on the server for consecutive requests.\n\n#### Action to Take\n\nThe styling solution relies on a cache, the *sheets manager*, to only inject the CSS once per component type (if you use two buttons, you only need the CSS of the button one time). You need to create **a new `sheets` instance for each request**.\n\n*example of fix:*\n\n```diff\n-// Create a sheets instance.\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // Render the component to a string.\nconst html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n```\n\n### React class name hydration mismatch\n\nThere is a class name mismatch between the client and the server. It might work for the first request. Another symptom is that the styling changes between initial page load and the downloading of the client scripts.\n\n#### Action to Take\n\nThe class names value relies on the concept of [class name generator](/styles/advanced/#class-names). The whole page needs to be rendered with **a single generator**. This generator needs to behave identically on the server and on the client. Por ejemplo:\n\n- You need to provide a new class name generator for each request. But you shouldn\'t share a `createGenerateClassName()` between different requests:\n\n*example of fix:*\n\n```diff\n-// Create a new class name generator.\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n\n+ // Create a new class name generator.\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // Render the component to a string.\n  const html = ReactDOMServer.renderToString(\n```\n\n- You need to verify that your client and server are running the **exactly the same version** of Material-UI. It is possible that a mismatch of even minor versions can cause styling problems. To check version numbers, run `npm list @material-ui/core` in the environment where you build your application and also in your deployment environment.\n  \n    You can also ensure the same version in different environments by specifying a specific MUI version in the dependencies of your package.json.\n\n*example of fix (package.json):*\n\n```diff\n  "dependencies": {\n    ...\n\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- You need to make sure that the server and the client share the same `process.env.NODE_ENV` value.\n\n## \xbfPor qu\xe9 los colores que veo son diferentes de lo que veo aqu\xed?\n\nThe documentation site is using a custom theme. Hence, the color palette is different from the default theme that Material-UI ships. Please refer to [this page](/customization/theming/) to learn about theme customization.\n\n## Why does component X require a DOM node in a prop instead of a ref object?\n\nComponents like the [Portal](/api/portal/#props) or [Popper](/api/popper/#props) require a DOM node in the `container` or `anchorEl` prop respectively. It seems convenient to simply pass a ref object in those props and let Material-UI access the current value. This works in a simple scenario:\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>portaled children</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\nwhere `Portal` would only mount the children into the container when `container.current` is available. Here is a naive implementation of Portal:\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\nWith this simple heuristic `Portal` might re-render after it mounts because refs are up-to-date before any effects run. However, just because a ref is up-to-date doesn\'t mean it points to a defined instance. If the ref is attached to a ref forwarding component it is not clear when the DOM node will be available. The above implementation could also not account for a change in the DOM node. In the example above, the `Portal` would run an effect once, but might not re-render because `ref.current` is still `null`. This is especially apparent for React.lazy components in Suspense.\n\nThis is why we require a prop with the actual DOM node so that React can take care of determining when the `Portal` should re-render:\n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Portaled</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## \xbfPara qu\xe9 sirve la dependencia de clsx?\n\n[clsx](https://github.com/lukeed/clsx) is a tiny utility for constructing `className` strings conditionally, out of an object with keys being the class strings, and values being booleans.\n\nInstead of writing:\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? // let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ?\n```\n\nyou can do:\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```'},HKYD:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/getting-started/faq",function(){return t("mhEe")}])},JBBM:function(e,n){e.exports='# Perguntas Frequentes\n\n<p class="description">Preso em um determinado problema? Confira primeiro algumas dicas nas Perguntas Frequentes.</p>\n\nSe mesmo assim voc\xea n\xe3o encontrar o que voc\xea est\xe1 procurando, voc\xea pode consultar a nossa [p\xe1gina de suporte](/getting-started/support/).\n\n## Material-UI \xe9 incr\xedvel. Como posso apoiar o projeto?\n\nExistem muitas maneiras de apoiar o Material-UI:\n\n- **Espalhe a palavra**. Evangelize Material-UI [vinculando o material-ui.com](https://mui.com/) no seu site, todo backlink conta. Siga-nos no [Twitter](https://twitter.com/MaterialUI), curta e retu\xedte as not\xedcias importantes. Ou apenas fale sobre n\xf3s com os seus amigos.\n- **D\xea-nos sua opini\xe3o**. Conte-nos o que estamos fazendo bem ou onde podemos melhorar. Por favor vote (\ud83d\udc4d) nos issues do GitHub que voc\xea est\xe1 mais interessado em ver resolvidos.\n- **Ajude novos usu\xe1rios**. Voc\xea pode responder a perguntas no [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui).\n- **Fa\xe7a as altera\xe7\xf5es acontecerem**. \n  - Edite a documenta\xe7\xe3o. Cada p\xe1gina da vers\xe3o em ingl\xeas tem um link "EDIT THIS PAGE" no canto superior direito.\n  - Reporte erros ou recursos faltantes [criando uma issue](https://github.com/mui-org/material-ui/issues/new).\n  - Revise e comente em [pull requests](https://github.com/mui-org/material-ui/pulls) e [issues](https://github.com/mui-org/material-ui/issues) existentes.\n  - Ajude a [traduzir](https://translate.material-ui.com) a documenta\xe7\xe3o.\n  - [Aprimore nossa documenta\xe7\xe3o](https://github.com/mui-org/material-ui/tree/master/docs), corrija bugs, ou adicione recursos [enviando um pull request](https://github.com/mui-org/material-ui/pulls).\n- **Apoie-nos financeiramente no [OpenCollective](https://opencollective.com/material-ui)**. Se voc\xea usa Material-UI em um projeto comercial e gostaria de apoiar seu desenvolvimento cont\xednuo tornando-se um Patrocinador, ou em um projeto freelancer ou hobby e gostaria de se tornar um Apoiador, voc\xea pode se tornar atrav\xe9s do OpenCollective. Todos os fundos doados s\xe3o geridos de forma transparente e os Patrocinadores recebem reconhecimento no README e na p\xe1gina inicial do Material-UI.\n\n## Por que meus componentes n\xe3o est\xe3o renderizando corretamente em compila\xe7\xf5es de produ\xe7\xe3o?\n\nO motivo n\xfamero #1 pelo qual isto provavelmente acontecer\xe1 \xe9 devido a conflitos de nome de classe quando seu c\xf3digo estiver em um pacote de produ\xe7\xe3o. Para que o Material-UI funcione, os valores do `className` de todos os componentes de uma p\xe1gina, devem ser gerados por uma \xfanica inst\xe2ncia do [gerador de nome de classes](/styles/advanced/#class-names).\n\nPara corrigir este problema, todos os componentes da p\xe1gina precisam ser inicializados, de modo que haja somente **um gerador de nome de classe** entre eles.\n\nVoc\xea pode acabar usando acidentalmente dois geradores de nome de classe em v\xe1rios cen\xe1rios:\n\n- Voc\xea acidentalmente **empacota** duas vers\xf5es do Material-UI. Voc\xea pode ter nesse caso, uma depend\xeancia que n\xe3o esta configurando corretamente o Material-UI.\n- Voc\xea esta usando `StylesProvider` para um **subconjunto** da sua \xe1rvore de componentes React.\n- Voc\xea est\xe1 usando um empacotador (bundler) e est\xe1 dividindo o c\xf3digo de uma maneira que faz com que v\xe1rias inst\xe2ncias do gerador de nome de classe sejam criadas.\n\n> Se voc\xea estiver usando webpack com [SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/), tente configurar o [`runtimeChunk` dispon\xedvel em `optimizations`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk).\n\nNo geral, \xe9 simples livrar-se desse problema encapsulando cada aplica\xe7\xe3o Material-UI com componentes [`StylesProvider`](/styles/api/#stylesprovider), no topo de suas \xe1rvores de componentes** e usando um \xfanico gerador de nome de classe compartilhado entre eles**.\n\n## Por que os elementos posicionados como fixos se movem quando um modal \xe9 aberto?\n\nA rolagem \xe9 bloqueada assim que um modal \xe9 aberto. Isto impede a intera\xe7\xe3o com o segundo plano, pois o modal deve ser o \xfanico conte\xfado interativo. No entanto, removendo a barra de rolagem pode fazer com que seus **elementos fixos posicionados** se movam. Nesta situa\xe7\xe3o, voc\xea pode aplicar um nome de classe global `.mui-fixed ` para informar ao Material-UI para manipular esses elementos.\n\n## Como posso desativar o efeito cascata globalmente?\n\nO efeito cascata \xe9 exclusivamente proveniente do componente `BaseButton`. Voc\xea pode desativar o efeito cascata globalmente aplicando as seguintes configura\xe7\xf5es no seu tema:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // Nome do componente \u269b\ufe0f\n    MuiButtonBase: {\n      // As propriedades para aplicar\n      disableRipple: true, // Sem efeito cascata, em toda aplica\xe7\xe3o \ud83d\udca3!\n    },\n  },\n});\n```\n\n## Como posso desativar as transi\xe7\xf5es globalmente?\n\nMaterial-UI usa o mesmo auxiliar de tema para criar todas as transi\xe7\xf5es. Portanto, voc\xea pode desativar todas as transi\xe7\xf5es substituindo o auxiliar no seu tema:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // Ent\xe3o temos `transition: none;` em todo lugar\n    create: () => \'none\',\n  },\n});\n```\n\nPode ser \xfatil desabilitar transi\xe7\xf5es durante testes visuais ou para melhorar o desempenho em dispositivos de baixo custo.\n\nVoc\xea pode ir al\xe9m, desabilitando todas as transi\xe7\xf5es e efeitos de anima\xe7\xf5es:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // Nome do componente \u269b\ufe0f\n    MuiCssBaseline: {\n      // Nome da regra\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\nObserve que o uso de `CssBaseline` \xe9 necess\xe1rio para que a abordagem acima funcione. Se voc\xea optar por n\xe3o us\xe1-lo, voc\xea ainda pode desabilitar transi\xe7\xf5es e anima\xe7\xf5es incluindo estas regras CSS:\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## Preciso usar o JSS para estilizar minha aplica\xe7\xe3o?\n\nN\xe3o, n\xe3o \xe9 obrigat\xf3rio. Mas essa depend\xeancia vem embutida, portanto, n\xe3o sobrecarrega o tamanho do pacote.\n\nNo entanto, talvez voc\xea esteja adicionando os componentes Material-UI para uma aplica\xe7\xe3o que j\xe1 usa outra solu\xe7\xe3o de estilos, ou, j\xe1 esta familiarizado com uma API diferente e n\xe3o quer aprender uma nova? Nesse caso, dirija-se \xe0 se\xe7\xe3o de [interoperabilidade da biblioteca de estilos](/guides/interoperability/), onde mostramos como \xe9 simples reestilizar os componentes do Material-UI com bibliotecas de estilos alternativas.\n\n## Quando devo usar o estilo em linha vs CSS?\n\nComo regra geral, use apenas o estilo em linha para propriedades de estilo din\xe2micas. A alternativa de uso com CSS oferece mais vantagens, em:\n\n- prefixa\xe7\xe3o autom\xe1tica\n- melhor depura\xe7\xe3o\n- consultas de m\xeddia\n- keyframes\n\n## Como usar react-router?\n\nDetalhamos a [integra\xe7\xe3o com bibliotecas de roteamento de terceiros](/guides/composition/#routing-libraries) como react-router, Gatsby ou Next.js em nosso guia.\n\n## Como posso acessar o elemento DOM?\n\nTodos os componentes do Material-UI que devem renderizar algo no DOM possuem refer\xeancia para o componente DOM subjacente. Isso significa que voc\xea pode obter elementos DOM lendo o ref anexado aos componentes do Material-UI:\n\n```jsx\n// uma fun\xe7\xe3o setter ref\nconst ref = React.createRef();\n// renderizando\n<Button ref={ref} />;\n// uso\nconst element = ref.current;\n```\n\nSe voc\xea n\xe3o tem certeza se o componente do Material-UI em quest\xe3o encaminha seu ref, voc\xea pode verificar a documenta\xe7\xe3o da API em "Props" por exemplo, a API [Button API](/api/button/#props)\n\n> O ref \xe9 encaminhado para o elemento raiz.\n\nindicando que voc\xea pode acessar o elemento DOM como uma refer\xeancia.\n\n## Eu tenho v\xe1rias inst\xe2ncias de estilos na p\xe1gina\n\nSe voc\xea est\xe1 vendo uma mensagem de aviso no console como a abaixo, voc\xea provavelmente tem v\xe1rias inst\xe2ncias de `@material-ui/styles` inicializadas na p\xe1gina.\n\n> It looks like there are several instances of `@material-ui/styles` initialized in this application. Isso pode causar problemas de propaga\xe7\xe3o de temas, nomes de classes quebrados, problemas de especificidade e tornar sua aplica\xe7\xe3o maior sem um bom motivo.\n\n### Poss\xedveis raz\xf5es\n\nExistem v\xe1rias raz\xf5es comuns para isso acontecer:\n\n- Voc\xea tem outra biblioteca `@material-ui/styles` em algum lugar das suas depend\xeancias.\n- Voc\xea tem uma estrutura "monorepo" para seu projeto (por exemplo, lerna, yarn workspaces) e o m\xf3dulo `@material-ui/styles` \xe9 uma depend\xeancia em mais de um pacote (este \xe9 mais ou menos o mesmo que o anterior).\n- Voc\xea tem v\xe1rias aplica\xe7\xf5es que est\xe3o usando `@material-ui/styles` executando na mesma p\xe1gina (por exemplo, v\xe1rios pontos de entrada no webpack s\xe3o carregados na mesma p\xe1gina).\n\n### M\xf3dulo duplicado em node_modules\n\nSe voc\xea acha que o problema pode estar na duplica\xe7\xe3o do m\xf3dulo @material-ui/styles em algum lugar de suas depend\xeancias, h\xe1 v\xe1rias maneiras de verificar isto. Voc\xea pode usar os comandos `npm ls @material-ui/styles`, `yarn list @material-ui/styles` ou `find -L ./node_modules | grep /@material-ui/styles/package.json` na pasta da sua aplica\xe7\xe3o.\n\nSe nenhum desses comandos identificou a duplica\xe7\xe3o, tente analisar seu pacote para encontrar inst\xe2ncias duplicadas do @material-ui/styles. Voc\xea pode somente checar em fontes do seu pacote, ou usar uma ferramenta como [source-map-explorer](https://github.com/danvk/source-map-explorer) ou [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer).\n\nSe voc\xea identificou que a duplica\xe7\xe3o \xe9 o problema que voc\xea esta enfrentando, h\xe1 v\xe1rias coisas que voc\xea pode tentar para resolv\xea-lo:\n\nSe voc\xea est\xe1 usando npm voc\xea pode tentar executar `npm dedupe`. Este comando pesquisa as depend\xeancias locais e tenta simplificar a estrutura movendo depend\xeancias comuns mais acima na \xe1rvore.\n\nSe voc\xea estiver usando o webpack, voc\xea pode mudar a maneira como ele ir\xe1 resolver ([resolve](https://webpack.js.org/configuration/resolve/#resolve-modules)) o m\xf3dulo @material-ui/styles. Voc\xea pode sobrescrever a ordem padr\xe3o na qual o webpack ir\xe1 procurar por suas depend\xeancias e tornar a pasta node_modules da sua aplica\xe7\xe3o, com maior prioridade do que a ordem de resolu\xe7\xe3o de m\xf3dulos padr\xe3o:\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### Uso com Lerna\n\nUma poss\xedvel corre\xe7\xe3o para que o @material-ui/styles seja executado em um monorepo Lerna atrav\xe9s de pacotes \xe9 fazer [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) das depend\xeancias compartilhadas para a raiz do seu arquivo monorepo. Tente executar a op\xe7\xe3o de auto inicializa\xe7\xe3o com o par\xe2metro --hoist.\n\n```sh\nlerna bootstrap --hoist\n```\n\nAlternativamente, voc\xea pode remover a refer\xeancia do @material-ui/styles do seu arquivo package.json e subir (hoist) ela manualmente para o arquivo package.json da pasta raiz do Lerna.\n\nExemplo de um arquivo package.json em uma pasta raiz do Lerna\n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### Executando m\xfaltiplas aplica\xe7\xf5es em uma \xfanica p\xe1gina\n\nSe voc\xea tiver v\xe1rias aplica\xe7\xf5es em execu\xe7\xe3o em uma p\xe1gina, considere o uso de um \xfanico m\xf3dulo @material-ui/styles para todas elas. Se voc\xea esta usando webpack, voc\xea pode usar [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/) para criar de forma expl\xedcita um [vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), que conter\xe1 o m\xf3dulo @material-ui/styles:\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## Minha aplica\xe7\xe3o n\xe3o \xe9 renderizada corretamente no servidor\n\nSe isso n\xe3o funcionar, em 99% dos casos \xe9 um problema de configura\xe7\xe3o. Uma propriedade ausente, uma ordem de chamada errada ou um componente ausente \u2013 a renderiza\xe7\xe3o do lado do servidor \xe9 rigorosa sobre configura\xe7\xe3o, e a melhor maneira de descobrir o que h\xe1 de errado \xe9 comparar seu projeto com uma configura\xe7\xe3o j\xe1 em funcionamento. Confira as [implementa\xe7\xf5es de refer\xeancia](/guides/server-rendering/#reference-implementations), pouco a pouco.\n\n### O CSS funciona apenas no primeiro carregamento, em seguida, para de funcionar\n\nO CSS \xe9 gerado apenas no primeiro carregamento da p\xe1gina. Em seguida, o CSS n\xe3o retorna do servidor para solicita\xe7\xf5es consecutivas.\n\n#### A\xe7\xe3o a tomar\n\nA solu\xe7\xe3o de estilo depende de um cache, o *sheets manager*, para injetar apenas o CSS uma vez por tipo de componente (se voc\xea usar dois bot\xf5es, voc\xea s\xf3 precisa do CSS do bot\xe3o uma vez). Voc\xea precisa criar **uma nova inst\xe2ncia de `sheets` para cada requisi\xe7\xe3o**.\n\n*exemplo de corre\xe7\xe3o:*\n\n```diff\n-// Crie uma inst\xe2ncia de sheets.\n-const sheets = new ServerStyleSheets();\n\nfunction handleRender(req, res) {\n\n+ // Crie uma inst\xe2ncia de sheets.\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // Renderize o componente para uma string.\n  const html = ReactDOMServer.renderToString(\n```\n\n### React incompatibilidade de nome de classes na hidrata\xe7\xe3o (React Hydrate)\n\nH\xe1 uma incompatibilidade de nome de classe entre o cliente e o servidor. Pode funcionar para a primeira requisi\xe7\xe3o. Outro sintoma \xe9 que o estilo muda entre o carregamento inicial da p\xe1gina e o download dos scripts do cliente.\n\n#### A\xe7\xe3o a tomar\n\nO valor de nomes de classe depende da l\xf3gica empregada pelo [gerador de nome de classe](/styles/advanced/#class-names). A p\xe1gina inteira precisa ser renderizada com **um \xfanico gerador**. Este gerador precisa se comportar de forma id\xeantica no servidor e no cliente. Por exemplo:\n\n- Voc\xea precisa fornecer um novo gerador de nome de classe para cada requisi\xe7\xe3o. Mas voc\xea n\xe3o deve compartilhar um `createGenerateClassName()` entre diferentes requisi\xe7\xf5es:\n\n*exemplo de corre\xe7\xe3o:*\n\n```diff\n- // Crie um novo gerador de nome de classe.\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n\n+ // Crie um novo gerador de nome de classe.\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // Renderize o componente para uma string.\n  const html = ReactDOMServer.renderToString(\n```\n\n- Voc\xea precisa verificar se seu cliente e servidor est\xe3o executando **exatamente a mesma vers\xe3o** do Material-UI. \xc9 poss\xedvel que uma incompatibilidade de vers\xf5es menores possa causar problemas de estilo. Para verificar n\xfameros de vers\xe3o, execute `npm list @material-ui/core` no ambiente em que voc\xea cria sua aplica\xe7\xe3o e tamb\xe9m em seu ambiente de implementa\xe7\xe3o.\n  \n    Voc\xea tamb\xe9m pode garantir a mesma vers\xe3o em diferentes ambientes, definindo uma vers\xe3o espec\xedfica do MUI nas depend\xeancias do seu package.json.\n\n*exemplo de corre\xe7\xe3o (package.json):*\n\n```diff\n  "dependencies": {\n    ...\n\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- Voc\xea precisa ter certeza de que o servidor e o cliente compartilhem o mesmo valor de `process.env.NODE_ENV`.\n\n## Por que as cores que estou vendo s\xe3o diferentes das que vejo aqui?\n\nO site de documenta\xe7\xe3o est\xe1 usando um tema customizado. Assim, a paleta de cores \xe9 diferente do tema padr\xe3o que \xe9 fornecido pelo Material-UI. Por favor, consulte [esta p\xe1gina](/customization/theming/) para aprender sobre customiza\xe7\xe3o de temas.\n\n## Por que o componente X requer um n\xf3 DOM em uma propriedade em vez de um objeto ref?\n\nComponentes como [Portal](/api/portal/#props) ou [Popper](/api/popper/#props) requerem um n\xf3 DOM na propriedade `container` ou `anchorEl` respectivamente. Parece conveniente simplesmente passar um objeto ref nessas propriedades e deixar o Material-UI acessar o valor atual. Isso funciona em um cen\xe1rio simples:\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Componente filho portado</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\nonde `Portal` s\xf3 montaria os filhos no container quando `container.current` estiver dispon\xedvel. Aqui est\xe1 uma implementa\xe7\xe3o simpl\xf3ria do Portal:\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\nCom esta simples heur\xedstica `Portal` pode renderizar novamente depois de montado porque os refs est\xe3o atualizados antes de qualquer efeito ser executado. No entanto, s\xf3 porque um ref est\xe1 atualizado n\xe3o significa que ele aponta para uma inst\xe2ncia definida. Se o ref estiver anexado a um componente de encaminhamento de ref n\xe3o estar\xe1 claro quando o n\xf3 DOM estar\xe1 dispon\xedvel. No exemplo acima, o `Portal` executaria o efeito uma vez, mas pode n\xe3o renderizar novamente porque `ref.current` ainda \xe9 `null`. Isso \xe9 especialmente aparente para componentes React.lazy em Suspense. A implementa\xe7\xe3o acima tamb\xe9m n\xe3o poderia explicar uma altera\xe7\xe3o no n\xf3 DOM.\n\n\xc9 por isso que precisamos de uma propriedade com o n\xf3 DOM real para que o React possa tomar cuidado ao determinar quando o `Portal` deve renderizar novamente:\n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Portaled</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## Para que serve a depend\xeancia do clsx?\n\n[clsx](https://github.com/lukeed/clsx) \xe9 um pequeno utilit\xe1rio para construir sequ\xeancias de strings de `className` condicionalmente, sendo um objeto onde as chaves s\xe3o as strings de classe e valores sendo booleanos.\n\nEm vez de escrever:\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ? \'Mui-selected\' : \'\'}`}\n  />\n);\n```\n\nvoc\xea pode fazer:\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```'},K3DI:function(e,n){e.exports='# \u5e38\u89c1\u95ee\u9898\u89e3\u7b54\n\n<p class="description">\u60a8\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u95ee\u9898\u4e0a\u505c\u6ede\u4e0d\u524d\u5417\uff1f \u60a8\u53ef\u4ee5\u5148\u5728\u5e38\u89c1 FAQ\uff08\u95ee\u9898\u89e3\u7b54\uff09\u4e2d\u68c0\u7d22\u4e00\u4e0b\u5e38\u89c1\u95ee\u9898\u3002</p>\n\n\u5982\u679c\u4ecd\u7136\u627e\u4e0d\u5230\u6240\u9700\u7684\u5185\u5bb9\uff0c\u60a8\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684 [\u652f\u6301\u9875\u9762](/getting-started/support/) \u3002\n\n## Material-UI \u8d85\u8d5e\u3002 \u6211\u8be5\u5982\u4f55\u652f\u6301\u8be5\u9879\u76ee\uff1f\n\n\u5176\u5b9e\u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u652f\u6301 Material-UI\uff1a\n\n- **\u53e3\u53e3\u76f8\u4f20**\u3002 \u901a\u8fc7\u5728\u60a8\u7684\u7f51\u7ad9\u4e0a [\u94fe\u63a5\u5230 material-ui.com](https://mui.com/) \u6765\u4f20\u64ad Material-UI \uff0c\u6bcf\u4e2a\u53cd\u5411\u94fe\u63a5\u5bf9\u6211\u4eec\u6765\u8bf4\u90fd\u5f88\u91cd\u8981\u3002 \u5728 [Twitter \u4e0a\u5173\u6ce8\u6211\u4eec](https://twitter.com/MaterialUI) \uff0c\u70b9\u8d5e\u5e76\u8f6c\u53d1\u4e00\u4e9b\u91cd\u8981\u7684\u65b0\u95fb\u3002 \u6216\u8005\u53ea\u662f\u4e0e\u60a8\u7684\u670b\u53cb\u8c08\u8bba\u6211\u4eec\u3002\n- **\u7ed9\u6211\u4eec\u53cd\u9988** \u3002 \u544a\u8bc9\u6211\u4eec\u4e00\u4e9b\u505a\u5f97\u597d\u7684\u5730\u65b9\u6216\u8005\u53ef\u4ee5\u6539\u8fdb\u7684\u5730\u65b9\u3002 \u8bf7\u7ed9\u60a8\u6700\u5e0c\u671b\u770b\u5230\u80fd\u591f\u89e3\u51b3\u7684\u95ee\u9898\u6295\u7968\uff08\ud83d\udc4d\uff09\u3002\n- **\u5e2e\u52a9\u65b0\u7684\u7528\u6237** \u3002 \u60a8\u53ef\u4ee5\u5728 [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui) \u4e2d\u56de\u7b54\u4e00\u4e9b\u95ee\u9898\u3002\n- **\u505a\u51fa\u4e00\u4e9b\u6539\u53d8\u5427**\u3002 \n  - \u7f16\u8f91\u6587\u6863\u3002 \u6bcf\u4e2a\u9875\u9762\u53f3\u4e0a\u89d2\u90fd\u6709\u4e00\u4e2a\u201c\u7f16\u8f91\u6b64\u9875\u9762\u201d\u7684\u94fe\u63a5\u3002\n  - \u901a\u8fc7 [\u521b\u5efa\u4e00\u4e2a\u95ee\u9898](https://github.com/mui-org/material-ui/issues/new) \u6765\u62a5\u544a\u9519\u8bef\u6216\u7f3a\u5c11\u7684\u529f\u80fd \u3002\n  - \u67e5\u770b\u548c\u8bc4\u8bba\u4e00\u4e9b\u73b0\u6709\u7684 [pull requests](https://github.com/mui-org/material-ui/pulls) \u548c [issues](https://github.com/mui-org/material-ui/issues)\u3002\n  - \u5e2e\u52a9\u6211\u4eec [\u7ffb\u8bd1](https://translate.material-ui.com) \u6587\u6863\u3002\n  - \u901a\u8fc7 [\u63d0\u4ea4\u7684\u4e00\u4e2a pull request](https://github.com/mui-org/material-ui/pulls) \u6765 [\u4f18\u5316\u6211\u4eec\u7684\u6587\u6863](https://github.com/mui-org/material-ui/tree/master/docs)\uff0c\u4fee\u590d\u9519\u8bef\uff0c\u6216\u8005\u6dfb\u52a0\u529f\u80fd\u3002\n- **\u5728 [OpenCollective](https://opencollective.com/material-ui)** \u4e0a\u8d44\u52a9\u6211\u4eec\u3002 \u5982\u679c\u60a8\u5728\u5546\u4e1a\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86 Material-UI\uff0c\u5e76\u5e0c\u671b\u901a\u8fc7\u6210\u4e3a\u6211\u4eec\u7684\u8d5e\u52a9\u5546\u6765\u652f\u6301\u6211\u4eec\u7684\u6301\u7eed\u53d1\u5c55\uff0c\u6216\u8005\u5728\u4e00\u4e2a\u4e1a\u4f59\u7684\u6216\u8005\u7231\u597d\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\uff0c\u5e76\u60f3\u6210\u4e3a\u6211\u4eec\u7684\u4e00\u4e2a\u652f\u6301\u8005\uff0c \u60a8\u90fd\u53ef\u4ee5\u901a\u8fc7 OpenCollective \u6765\u8d44\u52a9\u6211\u4eec\u3002 \u7b79\u96c6\u7684\u6240\u6709\u8d44\u91d1\u90fd\u662f\u900f\u660e\u7ba1\u7406\u7684\uff0c\u8d5e\u52a9\u5546\u5728 README \u548c Material-UI \u4e3b\u9875\u4e0a\u90fd\u4f1a\u83b7\u5f97\u8ba4\u53ef\u3002\n\n## \u4e3a\u4ec0\u4e48\u6211\u7684\u7ec4\u4ef6\u5728\u751f\u4ea7\u6784\u9020\u4e2d\u6ca1\u6709\u6b63\u786e\u5730\u6e32\u67d3\uff1f\n\n\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u7684\u9996\u8981\u539f\u56e0\uff0c\u5f88\u6709\u53ef\u80fd\u662f\u60a8\u7684\u4ee3\u7801\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u6346\u7ed1\u5305\u4e2d\u51fa\u73b0\u4e86\u7c7b\u540d\u51b2\u7a81\u3002 \u5982\u679c\u60f3\u8981 Material-UI \u6b63\u5e38\u5de5\u4f5c\uff0c\u9875\u9762\u4e0a\u6240\u6709\u7ec4\u4ef6\u7684 `classname` \u503c\u5fc5\u987b\u7531\u5355\u4e2a\u5b9e\u4f8b\u7684 [\u7c7b\u540d\u79f0\u751f\u6210\u5668](/styles/advanced/#class-names) \u751f\u6210\u3002\n\n\u8981\u7ea0\u6b63\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u9700\u8981\u5bf9\u9875\u9762\u4e0a\u7684\u6240\u6709\u7ec4\u4ef6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4f7f\u5b83\u4eec\u4e4b\u95f4\u6c38\u8fdc\u53ea\u6709**\u4e00\u4e2a\u7c7b\u540d\u751f\u6210\u5668**\u3002\n\n\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u80fd\u6700\u7ec8\u4f1a\u610f\u5916\u5730\u4f7f\u7528\u4e24\u4e2a\u7c7b\u540d\u751f\u6210\u5668\uff1a\n\n- \u60a8\u4e0d\u5c0f\u5fc3**\u6253\u5305**\u4e86\u4e24\u4e2a\u7248\u672c\u7684 Material-UI\u3002 \u60a8\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e\u67d0\u4e2a\u548c material-ui \u7684\u540c\u7b49\u4f9d\u8d56\u7684\u4f9d\u8d56\u5305\u3002\n- \u5bf9\u4e8e\u4f60\u7684 React \u6811\u63a7\u4ef6\u800c\u8a00\uff0c\u4f60\u5728\u4f7f\u7528 `JssProvider` \u6784\u5efa\u4e00\u4e2a **subject\uff08\u5206\u652f\uff09**\u3002\n- \u60a8\u6b63\u5728\u4f7f\u7528\u6253\u5305\u6839\u636e\uff0c\u800c\u5b83\u62c6\u5206\u4ee3\u7801\u7684\u65b9\u5f0f\u5bfc\u81f4\u521b\u5efa\u4e86\u591a\u4e2a\u7c7b\u540d\u751f\u6210\u5668\u7684\u5b9e\u4f8b\u3002\n\n> \u5982\u679c\u4f60\u6b63\u4f7f\u7528\u7684 webpack \u5e26\u6709 [SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/) \u63d2\u4ef6 \uff0c\u8bf7\u5c1d\u8bd5\u5728\u8bbe\u7f6e\u91cc\u7684 [`optimizations` \u4e0b\u914d\u7f6e `runtimeChunk`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk) \u3002\n\n\u603b\u7684\u6765\u8bf4\uff0c\u60a8\u53ea\u9700\u8981\u5728\u6bcf\u4e2a Material-UI \u5e94\u7528\u7a0b\u5e8f\u7684\u7ec4\u4ef6\u6811\u9876\u90e8\u4f7f\u7528 [`StylesProvider`](/styles/api/#stylesprovider) \u7ec4\u4ef6\u8fdb\u884c\u5305\u88c5\uff0c**\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u5171\u4eab\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\u540d\u751f\u6210\u5668**\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n## \u4e3a\u4ec0\u4e48\u5f53\u6253\u5f00\u4e00\u4e2a Modal\uff08\u6a21\u6001\u6846\uff09\u65f6\uff0c\u4f4d\u7f6e\u56fa\u5b9a\u7684\u5143\u7d20\u4f1a\u79fb\u52a8\uff1f\n\n\u5f53\u6a21\u6001\u6846\u6253\u5f00\u7684\u90a3\u4e00\u5239\u90a3\uff0c\u6eda\u52a8\u884c\u4e3a\u5c31\u4f1a\u88ab\u7981\u6b62\u3002 \u8fd9\u6837\u5c31\u80fd\u591f\u963b\u6b62\u7528\u6237\u4e0e\u4e0b\u5c42\u80cc\u666f\u5185\u5bb9\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u6a21\u6001\u6846\u5e94\u8be5\u662f\u552f\u4e00\u7684\u4ea4\u4e92\u5185\u5bb9\u3002 \u7136\u800c\uff0c\u79fb\u9664\u6eda\u52a8\u6761\u4f1a\u79fb\u52a8\u4e00\u4e9b**\u56fa\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20**\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u5e94\u7528\u5168\u5c40 `.mui-fixed` \u7c7b\u540d\u6765\u544a\u77e5 Material-UI \u53bb\u5904\u7406\u8fd9\u4e9b\u5143\u7d20\u3002\n\n## \u5982\u4f55\u5728\u5168\u5c40\u7981\u7528 ripple effect\uff08\u6d9f\u6f2a\u6548\u679c\uff09\uff1f\n\n\u6d9f\u6f2a\u6548\u679c\u5b8c\u5168\u6765\u81ea `BaseButton` \u7ec4\u4ef6\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u5728\u60a8\u7684\u4e3b\u9898\u4e2d\u63d0\u4f9b\u4ee5\u4e0b\u5185\u5bb9\uff0c\u6765\u5168\u5c40\u5730\u7981\u7528\u6d9f\u6f2a\u6548\u679c\uff1a\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // \u7ec4\u4ef6\u7684\u540d\u5b57 \u269b\ufe0f\n    MuiButtonBase: {\n      // \u9700\u8981\u5e94\u7528\u7684\u5c5e\u6027\n      disableRipple: true, // \u5728\u6574\u4e2a\u5e94\u7528\u4e2d\u90fd\u4e0d\u4f1a\u6709\u6d9f\u6f2a\u6548\u679c \ud83d\udca3\uff01\n    },\n  },\n});\n```\n\n## \u5982\u4f55\u7981\u7528\u5168\u5c40\u8fc7\u6e21\u52a8\u753b\uff1f\n\nMaterial-UI \u4f7f\u7528\u76f8\u540c\u7684\u4e3b\u9898\u52a9\u624b\u6765\u521b\u5efa\u5176\u6240\u6709\u7684\u8fc7\u6e21\u52a8\u753b\u3002 \u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u8986\u76d6\u4e3b\u9898\u52a9\u624b\u6765\u7981\u7528\u6240\u6709\u7684\u8fc7\u6e21\uff1a\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // \u8fd9\u6837\u5c31\u8bbe\u5b9a\u4e86\u5168\u5c40\u7684 `transition: none;`\n    create: () => \'none\',\n  },\n});\n```\n\n\u800c\u5728\u89c6\u89c9\u6d4b\u8bd5\u8fc7\u7a0b\uff0c\u6216\u8005\u5728\u4f4e\u7aef\u8bbe\u5907\u4e0a\u63d0\u9ad8\u6027\u80fd\u7684\u65f6\u5019\uff0c\u7981\u7528\u8fc7\u6e21\u52a8\u753b\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\n\n\u60a8\u53ef\u4ee5\u66f4\u8fdb\u4e00\u6b65\u5730\u7981\u7528\u6240\u6709\u7684\u8fc7\u6e21\u548c\u52a8\u753b\u6548\u679c\u3002\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // \u7ec4\u4ef6\u540d\u79f0 \u269b\ufe0f\n    MuiCssBaseline: {\n      // \u89c4\u5219\u540d\u79f0\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\n\u8bf7\u6ce8\u610f\uff0c\u82e5\u60f3\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u60a8\u5fc5\u987b\u4f7f\u7528 `CssBaseline` \u4f7f\u5176\u594f\u6548\u3002 \u5982\u679c\u60a8\u9009\u62e9\u4e0d\u4f7f\u7528\u5b83\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u52a0\u5165\u8fd9\u4e9b CSS \u89c4\u5219\u6765\u7981\u7528\u8fc7\u6e21\u548c\u52a8\u753b\uff1a\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## \u6211\u662f\u5426\u5fc5\u987b\u4f7f\u7528 JSS \u7ed9\u6211\u7684\u5e94\u7528\u7a0b\u5e8f\u6765\u8bbe\u7f6e\u6837\u5f0f\u5462\uff1f\n\n\u4e0d\u7528\u7684\uff0cJSS \u4e0d\u662f\u4e00\u4e2a\u5fc5\u987b\u9009\u62e9\u3002 \u4f46\u662f\u5b83\u662f\u4e00\u4e2a\u5185\u7f6e\u7684\u63d2\u4ef6\uff0c\u6240\u4ee5\u4f7f\u7528\u5b83\u5e76\u4e0d\u4f1a\u4ea7\u751f\u989d\u5916\u7684\u6346\u7ed1\u5305\u5c3a\u5bf8\u3002\n\n\u7136\u800c\uff0c\u4e5f\u8bb8\u60a8\u6b63\u5728\u7ed9\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e00\u4e9b Material-UI \u7ec4\u4ef6\uff0c\u800c\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u4f7f\u7528\u4e86\u5176\u4ed6\u7684\u6837\u5f0f\u89e3\u51b3\u65b9\u6848\uff0c\u6216\u8005\u60a8\u5df2\u7ecf\u719f\u6089\u4e86\u4e0d\u540c\u7684 API\uff0c\u800c\u4e0d\u60f3\u5b66\u4e60\u4e00\u4e2a\u65b0\u7684 API\uff1f \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u8bbf\u95ee [\u6837\u5f0f\u5e93\u4e92\u7528](/guides/interoperability/) \u7ae0\u8282\uff0c\u5728\u90a3\u4f60\u53ef\u4ee5\u53d1\u73b0\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u4e9b\u66ff\u4ee3\u6837\u5f0f\u5e93\u6765\u91cd\u65b0\u8bbe\u7f6e Material-UI \u7ec4\u4ef6\u7684\u6837\u5f0f\uff0c\u800c\u8fd9\u662f\u591a\u4e48\u7684\u7b80\u5355\u3002\n\n## \u5185\u8054\u6837\u5f0f\u4e0e CSS \u4e4b\u95f4\u6211\u5e94\u8be5\u600e\u4e48\u9009\u62e9\u4f7f\u7528\u7684\u65f6\u673a\uff1f\n\n\u6839\u636e\u7ecf\u9a8c\uff0c\u4ec5\u5bf9\u52a8\u6001\u7684\u6837\u5f0f\u5c5e\u6027\u4f7f\u7528\u5185\u8054\u6837\u5f0f\u3002 CSS \u7684\u66ff\u4ee3\u65b9\u6848\u4e5f\u6709\u8bf8\u591a\u4f18\u52bf\uff0c\u4f8b\u5982\uff1a\n\n- \u81ea\u52a8\u524d\u7f00\n- \u66f4\u597d\u5730\u8c03\u8bd5\n- \u5a92\u4f53\u67e5\u8be2\n- keyframes\n\n## \u6211\u5e94\u8be5\u600e\u4e48\u4f7f\u7528 react-router\uff1f\n\n\u5728\u6211\u4eec\u7684\u6307\u5357\u4e2d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e0e react-router\u3001Gatsby \u6216 Next.js \u8fd9\u6837\u7684 [\u7b2c\u4e09\u65b9\u8def\u7531\u5e93](/guides/composition/#routing-libraries) \u6574\u5408\u3002\n\n## \u6211\u5e94\u8be5\u600e\u4e48\u8bbf\u95ee DOM \u5143\u7d20\uff1f\n\n\u6240\u6709\u5e94\u8be5\u5728 DOM \u4e2d\u6e32\u67d3\u5185\u5bb9\u7684 Material-UI \u7ec4\u4ef6\u90fd\u4f1a\u90fd\u5c06\u5176 ref \u8f6c\u53d1\u7ed9\u5e95\u5c42\u7684 DOM \u7ec4\u4ef6\u3002 \u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u9644\u52a0\u5728 Material-UI \u7ec4\u4ef6\u4e0a\u7684 ref \u6765\u83b7\u53d6 DOM \u5143\u7d20\u3002\n\n```jsx\n// \u6216\u8005\u4f7f\u7528\u4e00\u4e2a ref setter \u51fd\u6570\nconst ref = React.createRef();\n// \u6e32\u67d3\n<Button ref={ref} />;\n// \u4f7f\u7528\nconst element = ref.current;\n```\n\n\u5982\u679c\u60a8\u5bf9\u76f8\u5173 Material-UI \u7ec4\u4ef6\u662f\u5426\u8f6c\u53d1\u4e86\u5b83\u7684 ref \u5b58\u5728\u7591\u95ee\u7684\u65f6\u5019\uff0c\u4f60\u53ef\u4ee5\u67e5\u770b\u201cProps\u201d\u4e0b\u7684 API \u6587\u6863\uff0c\u4f8b\u5982 [Button API](/api/button/#props) \u5305\u542b\u4e86\n\n> ref \u4f1a\u88ab\u8f6c\u53d1\u5230\u6839\u5143\u7d20\u3002\n\n\u8fd9\u5c31\u8868\u660e\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a ref \u6765\u8bbf\u95ee\u8fd9\u4e2a DOM \u5143\u7d20\u3002\n\n## \u6211\u7684\u9875\u9762\u4e0a\u6709\u591a\u4e2a\u6837\u5f0f\u5b9e\u4f8b\u3002\n\n\u5982\u679c\u60a8\u5728\u63a7\u5236\u53f0\u4e2d\u770b\u5230\u7c7b\u4f3c\u4e0b\u9762\u7684\u8b66\u544a\u6d88\u606f\uff0c\u90a3\u4e48\u60a8\u53ef\u80fd\u5df2\u7ecf\u5728\u9875\u9762\u4e0a\u521d\u59cb\u5316\u4e86\u591a\u4e2a `@material-ui/styles` \u5b9e\u4f8b\u3002\n\n> \u770b\u8d77\u6765\u5728\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u521d\u59cb\u5316\u4e86\u591a\u4e2a `@material-ui/styles` \u5b9e\u4f8b\u3002 \u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e3b\u9898\u4f20\u64ad\u95ee\u9898\u3001\u7c7b\u540d\u79f0\u635f\u574f\u3001\u4e13\u4e00\u6027\u95ee\u9898\uff0c\u5e76\u4f7f\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u5c3a\u5bf8\u65e0\u7aef\u53d8\u5927\u3002 \n\n### \u53ef\u80fd\u7684\u539f\u56e0\n\n\u51fa\u73b0\u8fd9\u4e9b\u95ee\u9898\u901a\u5e38\u6709\u51e0\u4e2a\u5e38\u89c1\u7684\u539f\u56e0\uff1a\n\n- \u5728\u60a8\u7684\u4f9d\u8d56\u5305\u4e2d\u8fd8\u5b58\u5728\u53e6\u4e00\u4e2a `@material-ui/styles` \u5e93\u3002\n- \u60a8\u7684\u9879\u76ee\u662f monorepo \u7ed3\u6784\uff08\u4f8b\u5982\uff0clerna\uff0cyarn workspaces\uff09\uff0c\u5e76\u4e14\u6709\u591a\u4e2a\u5305\u4f9d\u8d56\u7740 `@material-ui/styles` \u6a21\u5757\uff08\u8fd9\u4e0e\u524d\u4e00\u4e2a\u5305\u6216\u591a\u6216\u5c11\u76f8\u540c\uff09\u3002\n- \u60a8\u6709\u51e0\u4e2a\u4f7f\u7528 `@material-ui/styles` \u7684\u5e94\u7528\u7a0b\u5e8f\u5728\u540c\u4e00\u9875\u9762\u4e0a\u8fd0\u884c\uff08\u4f8b\u5982\uff0cwebpack \u4e2d\u7684\u51e0\u4e2a\u5165\u53e3\u70b9\u88ab\u52a0\u8f7d\u5728\u540c\u4e00\u9875\u9762\u4e0a\uff09\u3002\n\n### \u5728 node_modules \u4e2d\u91cd\u590d\u7684\u6a21\u5757\n\n\u5982\u679c\u60a8\u8ba4\u4e3a\u95ee\u9898\u53ef\u80fd\u51fa\u73b0\u5728\u60a8\u7684\u4f9d\u8d56\u5173\u7cfb\u4e2d\u7684 @material-ui/styles \u6a21\u5757\u7684\u91cd\u590d\uff0c\u90a3\u4e48\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u68c0\u67e5\u3002 \u60a8\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u6587\u4ef6\u5939\u4e2d\u4f7f\u7528 `npm ls @material-ui/styles`\u3001`yarn list @material-ui/styles` \u6216 `find -L ./node_modules | grep /@material-ui/styles/package.json` \u8fd9\u4e9b\u547d\u4ee4\u884c\u6765\u68c0\u67e5\u3002\n\n\u5982\u679c\u4f7f\u7528\u4e86\u8fd9\u4e9b\u547d\u4ee4\u4e4b\u540e\u90fd\u6ca1\u6709\u53d1\u73b0\u91cd\u590d\u7684\u4f9d\u8d56\uff0c\u8bf7\u5c1d\u8bd5\u5206\u6790\u60a8\u7684\u6346\u7ed1\u5305\u4e2d\u662f\u5426\u6709\u591a\u4e2a @material-ui/styles \u5b9e\u4f8b\u3002 \u60a8\u53ef\u4ee5\u76f4\u63a5\u53bb\u68c0\u67e5\u6346\u7ed1\u5305\u7684\u6e90\u4ee3\u7801\uff0c\u6216\u8005\u4f7f\u7528 [source-map-explorer](https://github.com/danvk/source-map-explorer) \u6216 [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer) \u8fd9\u6837\u7684\u5de5\u5177\u6765\u5e2e\u52a9\u68c0\u67e5\u3002\n\n\u5982\u679c\u60a8\u786e\u5b9a\u5f53\u524d\u9047\u5230\u7684\u95ee\u9898\u662f\u6a21\u5757\u91cd\u590d\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u8fd9\u6837\u89e3\u51b3\uff1a\n\n\u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u662f npm\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u8fd0\u884c `npm dedupe` \u547d\u4ee4\u3002 \u8fd9\u6761\u547d\u4ee4\u5c06\u4f1a\u641c\u7d22\u672c\u5730\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u8bd5\u56fe\u901a\u8fc7\u5c06\u5171\u540c\u7684\u4f9d\u8d56\u5305\u79fb\u5230\u6811\u7684\u66f4\u4e0a\u5c42\uff0c\u8fd9\u6837\u6765\u7b80\u5316\u7ed3\u6784\u3002\n\n\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662f webpack\uff0c\u60a8\u53ef\u4ee5\u66f4\u6539 [\u89e3\u6790](https://webpack.js.org/configuration/resolve/#resolve-modules) @material-ui/styles \u6a21\u5757\u7684\u65b9\u5f0f\u3002 \u60a8\u53ef\u4ee5\u4f7f\u7528\u8986\u76d6 webpack \u67e5\u627e\u4f9d\u8d56\u9879\u7684\u9ed8\u8ba4\u987a\u5e8f\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684 node_modules \u6bd4\u9ed8\u8ba4\u7684 node module \u89e3\u6790\u987a\u5e8f\u66f4\u4f18\u5148\u5730\u8fdb\u884c\u6e32\u67d3\u3002\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### \u4e0e Lerna \u4e00\u8d77\u4f7f\u7528\n\n\u5982\u679c\u60a8\u60f3\u8981\u8ba9 @material-ui/styles \u5728 Lerna monorepo \u4e2d\u8de8\u5305\u8fd0\u884c\uff0c\u4e00\u4e2a\u53ef\u884c\u7684\u4fee\u590d\u65b9\u6cd5\u662f [\u63d0\u5347\uff08hoist\uff09](https://github.com/lerna/lerna/blob/master/doc/hoist.md)\u5171\u4eab\u7684\u4f9d\u8d56\u5305\u5230 monorepo \u6587\u4ef6\u7684\u6839\u90e8\u3002 \u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528 --hoist \u6807\u8bc6\u8fd0\u884c\u5f15\u5bfc\u7684\u9009\u9879\u3002\n\n```sh\nlerna bootstrap --hoist\n```\n\n\u53e6\u5916\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4ece package.json \u6587\u4ef6\u4e2d\u5220\u9664 @material-ui/styles \u9879\uff0c\u7136\u540e\u624b\u52a8\u5c06\u5b83\u79fb\u52a8\u5230\u60a8\u9876\u5c42\u7684 package.json \u6587\u4ef6\u4e2d\u3002\n\nLerna \u6839\u76ee\u5f55\u4e0b\u7684 package.json \u6587\u4ef6\u793a\u4f8b\uff1a \n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### \u5728\u4e00\u4e2a\u9875\u9762\u4e0a\u8fd0\u884c\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\n\n\u5982\u679c\u60a8\u5728\u4e00\u4e2a\u9875\u9762\u4e0a\u9700\u8981\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff0c\u90a3\u4e48\u8bf7\u8003\u8651\u5728\u6240\u6709\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e00\u4e2a @material-ui/styles \u6a21\u5757\u3002 \u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528 webpack\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u4f7f\u7528 [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/) \u6765\u521b\u5efa\u4e00\u4e2a\u663e\u5f0f\u7684 [\u7b2c\u4e09\u65b9\u4ee3\u7801\u5757\uff08vendor chunk\uff09](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk)\uff0c\u5176\u4e2d\u5c06\u5305\u542b @material-ui/styles \u6a21\u5757\uff1a\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## \u6211\u7684\u5e94\u7528\u6ca1\u6709\u5728\u670d\u52a1\u5668\u4e0a\u6b63\u786e\u7684\u6e32\u67d3\u3002\n\n\u5982\u679c\u60a8\u7684\u7a0b\u5e8f\u6e32\u67d3\u4e0d\u6b63\u5e38\uff0c99% \u7684\u60c5\u51b5\u4e0b\u90fd\u662f\u914d\u7f6e\u95ee\u9898\uff1a \u7f3a\u5c11\u5c5e\u6027\u3001\u8c03\u7528\u987a\u5e8f\u9519\u8bef\u6216\u7f3a\u5c11\u7ec4\u4ef6 \u2014 \u670d\u52a1\u7aef\u6e32\u67d3\u5bf9\u914d\u7f6e\u7684\u8981\u6c42\u662f\u5f88\u4e25\u683c\u7684\uff0c\u8981\u627e\u51fa\u95ee\u9898\u7684\u6700\u597d\u65b9\u6cd5\u662f\u5c06\u60a8\u7684\u9879\u76ee\u4e0e\u4e00\u4e2a\u5df2\u7ecf\u6b63\u5e38\u8fd0\u884c\u7684\u9879\u76ee\u914d\u7f6e\u8fdb\u884c\u6bd4\u8f83\u3002 \u8bf7\u9010\u4f4d\u67e5\u770b [\u53c2\u8003\u5b9e\u73b0](/guides/server-rendering/#reference-implementations)\u3002\n\n### CSS \u4ec5\u5728\u7b2c\u4e00\u6b21\u52a0\u8f7d\u65f6\u751f\u6548\uff0c\u7136\u540e\u5c31\u6d88\u5931\u4e86\n\nCSS \u53ea\u5728\u9875\u9762\u7b2c\u4e00\u6b21\u52a0\u8f7d\u65f6\u751f\u6210\u3002 \u90a3\u4e48\uff0c\u82e5\u8fde\u7eed\u5730\u8bf7\u6c42\u670d\u52a1\u5668\uff0c\u5c31\u4f1a\u5bfc\u81f4 CSS \u7684\u4e22\u5931\u3002\n\n#### \u8981\u8fd0\u884c\u7684\u64cd\u4f5c\n\n\u6837\u5f0f\u89e3\u51b3\u65b9\u6848\u4f9d\u8d56\u4e8e\u7f13\u5b58\uff0c\u5373 *sheets manager*\uff0c\u6765\u4e3a\u6bcf\u4e2a\u7ec4\u4ef6\u7c7b\u53ea\u6ce8\u5165\u4e00\u6b21 CSS\uff08\u5982\u679c\u60a8\u4f7f\u7528\u4e86\u4e24\u4e2a\u6309\u94ae\uff0c\u5219\u53ea\u9700\u8981\u5e94\u7528\u4e00\u6b21\u6309\u94ae\u7684 CSS\uff09\u3002 \u60a8\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u521b\u5efa **\u4e00\u4e2a\u65b0\u7684 `sheet` \u5b9e\u4f8b**\u3002\n\n*\u4fee\u590d\u793a\u4f8b\uff1a*\n\n```diff\n-// \u521b\u5efa\u4e00\u4e2a sheets \u5b9e\u4f8b\n\n-const sheets = new ServerStyleSheets();\n\nfunction handleRender(req, res) {\n\n+ // \u521b\u5efa\u4e00\u4e2a sheets \u5b9e\u4f8b\u3002\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // \u5c06\u7ec4\u4ef6\u6e32\u67d3\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n  const html = ReactDOMServer.renderToString(\n```\n\n### React \u7c7b\u540d\u6e32\u67d3\u4e0d\u5339\u914d\n\n\u60a8\u4f1a\u9047\u5230\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e4b\u95f4\u5b58\u5728\u7c7b\u540d\u4e0d\u5339\u914d\u7684\u60c5\u51b5\u3002 \u53ef\u80fd\u5728\u7b2c\u4e00\u6b21\u8bf7\u6c42\u65f6\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002 \u53e6\u4e00\u4e2a\u5f81\u5146\u662f\uff0c\u5728\u521d\u59cb\u9875\u9762\u52a0\u8f7d\u548c\u4e0b\u8f7d\u5ba2\u6237\u7aef\u811a\u672c\u4e4b\u95f4\uff0c\u6837\u5f0f\u4f1a\u53d1\u751f\u53d8\u5316\u3002\n\n#### \u8981\u8fd0\u884c\u7684\u64cd\u4f5c\n\n\u7c7b\u540d\u503c\u4f9d\u8d56\u4e8e [\u7c7b\u540d\u751f\u6210\u5668](/styles/advanced/#class-names) \u7684\u6982\u5ff5\u3002 \u6574\u4e2a\u9875\u9762\u9700\u8981\u7528**\u4e00\u4e2a\u7c7b\u540d\u751f\u6210\u5668**\u6765\u6e32\u67d3\u3002 \u8fd9\u4e2a\u751f\u6210\u5668\u9700\u8981\u5728\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u4e0a\u7684\u884c\u4e3a\u4e00\u81f4\u3002 \u5c31\u50cf\u8fd9\u6837\uff1a\n\n- \u60a8\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bf7\u6c42\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u7c7b\u540d\u751f\u6210\u5668\u3002 \u4f46\u662f\u60a8\u4e0d\u5e94\u8be5\u5728\u4e0d\u540c\u7684\u8bf7\u6c42\u4e4b\u95f4\u5171\u4eab `createGenerateClassName()`\uff1a\n\n*\u4fee\u590d\u793a\u4f8b\uff1a*\n\n```diff\n-  // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b\u540d\u751f\u6210\u5668\u3002\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n\n+ // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7c7b\u540d\u751f\u6210\u5668\u3002\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // \u5c06\u7ec4\u4ef6\u6e32\u67d3\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n  const html = ReactDOMServer.renderToString(\n```\n\n- \u60a8\u9700\u8981\u9a8c\u8bc1\u60a8\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u8fd0\u884c\u7684 Material-UI \u7684**\u7248\u672c** \u662f\u5426\u5b8c\u5168\u76f8\u540c\u3002 \u5373\u4f7f\u662f\u5c0f\u5c0f\u7684\u7248\u672c\u7684\u4e0d\u5339\u914d\u4e5f\u53ef\u80fd\u5bfc\u81f4\u6837\u5f0f\u95ee\u9898\u3002 \u82e5\u60f3\u68c0\u67e5\u7248\u672c\u53f7\uff0c\u60a8\u53ef\u4ee5\u5728\u642d\u5efa\u5e94\u7528\u7a0b\u5e8f\u7684\u73af\u5883\u4ee5\u53ca\u90e8\u7f72\u73af\u5883\u4e2d\u90fd\u8fd0\u884c `npm list @material-ui/core`\u3002\n  \n    \u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5728 package.json \u7684\u4f9d\u8d56\u9879\u4e2d\u6307\u5b9a\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684 MUI \u7248\u672c\uff0c\u8fd9\u6837\u80fd\u591f\u786e\u4fdd\u5728\u4e0d\u540c\u73af\u5883\u4e2d\u4f7f\u7528\u7684\u7248\u672c\u662f\u4e00\u81f4\u7684\u3002\n\n*\u4fee\u590d\uff08package.json\uff09\u7684\u793a\u4f8b\uff1a*\n\n```diff\n  "dependencies": {\n    ...\n\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- \u8bf7\u786e\u4fdd\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u6240\u5171\u4eab\u7684\u662f\u76f8\u540c\u7684 `process.env.NODE_ENV` \u503c\u3002\n\n## \u4e3a\u4ec0\u4e48\u6211\u770b\u5230\u7684\u989c\u8272\u548c\u6587\u6863\u8fd9\u91cc\u7684\u989c\u8272\u5927\u76f8\u5f84\u5ead\uff1f\n\n\u8fd9\u662f\u56e0\u4e3a\u6587\u6863\u7f51\u7ad9\u4f7f\u7528\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u4e3b\u9898\u3002 \u56e0\u6b64\uff0c\u8c03\u8272\u677f\u548c Material-UI \u7684\u9ed8\u8ba4\u7684\u4e3b\u9898\u6240\u5c55\u793a\u7684\u6548\u679c\u662f\u622a\u7136\u4e0d\u540c\u7684\u3002 \u8bf7\u53c2\u8003 [\u8fd9\u4e2a\u9875\u9762](/customization/theming/) \u6765\u4e86\u89e3\u81ea\u5b9a\u4e49\u4e3b\u9898\u3002\n\n## \u4e3a\u4ec0\u4e48\u7ec4\u4ef6 X \u9700\u8981\u5c5e\u6027\u4e2d\u7684 DOM \u8282\u70b9\u800c\u4e0d\u662f\u4e00\u4e2a ref \u5bf9\u8c61\uff1f\n\n\u50cf [Portal](/api/portal/#props) \u6216 [Popper](/api/popper/#props) \u8fd9\u6837\u7684\u7ec4\u4ef6\u5206\u522b\u9700\u8981 `container` \u6216 `anchorEl` \u5c5e\u6027\u4e2d\u7684 DOM \u8282\u70b9\u3002 \u82e5\u9700\u5728\u8fd9\u4e9b\u5c5e\u6027\u4e2d\u4f20\u9012\u4e00\u4e2a ref \u5bf9\u8c61\uff0c\u5e76\u8ba9 Material-UI \u8bbf\u95ee\u5f53\u524d\u503c\uff0c\u8fd9\u770b\u8d77\u6765\u66f4\u52a0\u7b80\u6d01\u6709\u6548\u3002 \u8fd9\u5728\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6848\u4e2d\u5c31\u53ef\u4ee5\u5b9e\u73b0\uff1a\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>\u4f20\u9001\u95e8\u7684\u5b50\u7ec4\u4ef6</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\n\u5176\u4e2d\uff0c`Portal` \u4ec5\u5728 `container.current` \u53ef\u7528\u65f6\u624d\u4f1a\u5c06\u5176\u5b50\u9879\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684 Portal \u5b9e\u73b0\u4f8b\u5b50\uff1a\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\n\u8fd9\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u542f\u53d1\u60a8\uff0c`Portal` \u53ef\u80fd\u4f1a\u5728\u6302\u8f7d\u540e\u91cd\u65b0\u6e32\u67d3\uff0c\u56e0\u4e3a\u5728\u4efb\u4f55\u6548\u679c\u8fd0\u884c\u4e4b\u524d\uff0crefs \u90fd\u662f\u6700\u65b0\u7684\u3002 \u7136\u800c\uff0c\u4ec5\u4ec5\u56e0\u4e3a ref \u662f\u6700\u65b0\u7684\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u4f1a\u6307\u5411\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684\u5b9e\u4f8b\u3002 \u5982\u679c ref \u662f\u9644\u7740\u5728\u4e00\u4e2a ref \u6240\u8f6c\u53d1\u7ec4\u4ef6\u4e0a\u7684\u8bdd\uff0c\u90a3\u4e48 DOM \u8282\u70b9\u4f55\u65f6\u53ef\u7528\u662f\u4e0d\u660e\u786e\u7684\u3002 \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c`Portal` \u5c06\u4ea7\u751f\u4e00\u6b21\u6548\u679c\uff0c\u4f46\u53ef\u80fd\u4e0d\u4f1a\u91cd\u65b0\u6e32\u67d3\uff0c\u56e0\u4e3a `ref.current` \u7684\u503c\u4ecd\u7136\u662f `null`\u3002 \u800c Suspense \u4e2d\u7684 React.lazy \u7ec4\u4ef6\u4e2d\uff0c\u8fd9\u4e00\u70b9\u5c24\u4e3a\u660e\u663e\u3002 \u4e0a\u8ff0\u5b9e\u73b0\u4e5f\u5e76\u4e0d\u80fd\u4ee3\u8868 DOM \u8282\u70b9\u7684\u4e00\u4e2a\u53d8\u5316\u3002 \n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5177\u6709\u5b9e\u9645 DOM \u8282\u70b9\u7684\u5c5e\u6027\uff0c\u8fd9\u6837 React \u5c31\u53ef\u4ee5\u8d1f\u8d23\u786e\u5b9a `Portal` \u4f55\u65f6\u5e94\u8be5\u91cd\u65b0\u6e32\u67d3\u3002 \n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>\u4f20\u9001\u7684\u5b50\u7ec4\u4ef6</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## clsx \u4f9d\u8d56\u662f\u7528\u4e8e\u4ec0\u4e48\uff1f\n\n[clsx](https://github.com/lukeed/clsx)\u662f\u4e00\u4e2a\u5c0f\u578b\u5de5\u5177\u96c6\uff0c\u7528\u4e8e\u6709\u6761\u4ef6\u5730\u4ece\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u6784\u9020 `className` \u5b57\u7b26\u4e32\uff0c\u6b64\u5bf9\u8c61\u7684\u952e\u662f\u7c7b\u5b57\u7b26\u4e32\uff08class strings\uff09\uff0c\u800c\u503c\u662f\u5e03\u5c14\u503c\uff08booleans\uff09\u3002 \n\n\u8bf7\u4e0d\u8981\u8fd9\u6837\u5199\uff1a\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ? \'Mui-selected\' : \'\'}`}\n  />\n);\n```\n\n\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```'},"T+Pw":function(e,n,t){var a={"./faq-de.md":"toGW","./faq-es.md":"EgeP","./faq-fr.md":"z8jo","./faq-ja.md":"tS4E","./faq-pt.md":"JBBM","./faq-ru.md":"5jBj","./faq-zh.md":"K3DI","./faq.md":"bz5o"};function o(e){var n=r(e);return t(n)}function r(e){if(!t.o(a,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return a[e]}o.keys=function(){return Object.keys(a)},o.resolve=r,e.exports=o,o.id="T+Pw"},bz5o:function(e,n){e.exports='# Frequently Asked Questions\n\n<p class="description">Stuck on a particular problem? Check some of these common gotchas first in the FAQ.</p>\n\nIf you still can\'t find what you\'re looking for, you can refer to our [support page](/getting-started/support/).\n\n## Material-UI is awesome. How can I support the project?\n\nThere are many ways to support Material-UI:\n\n- **Spread the word**. Evangelize Material-UI by [linking to material-ui.com](https://mui.com/) on your website, every backlink matters.\nFollow us on [Twitter](https://twitter.com/MaterialUI), like and retweet the important news. Or just talk about us with your friends.\n- **Give us feedback**. Tell us what we\'re doing well or where we can improve. Please upvote (\ud83d\udc4d) the issues that you are the most interested in seeing solved.\n- **Help new users**. You can answer questions on\n[StackOverflow](https://stackoverflow.com/questions/tagged/material-ui).\n- **Make changes happen**.\n  - Edit the documentation. Every page has an "EDIT THIS PAGE" link in the top right.\n  - Report bugs or missing features by [creating an issue](https://github.com/mui-org/material-ui/issues/new).\n  - Review and comment on existing [pull requests](https://github.com/mui-org/material-ui/pulls) and [issues](https://github.com/mui-org/material-ui/issues).\n  - Help [translate](https://translate.material-ui.com) the documentation.\n  - [Improve our documentation](https://github.com/mui-org/material-ui/tree/master/docs), fix bugs, or add features by [submitting a pull request](https://github.com/mui-org/material-ui/pulls).\n- **Support us financially on [OpenCollective](https://opencollective.com/material-ui)**.\n  If you use Material-UI in a commercial project and would like to support its continued development by becoming a Sponsor, or in a side or hobby project and would like to become a Backer, you can do so through OpenCollective.\n  All funds donated are managed transparently, and Sponsors receive recognition in the README and on the Material-UI home page.\n\n## Why aren\'t my components rendering correctly in production builds?\n\nThe #1 reason this likely happens is due to class name conflicts once your code is in a production bundle.\nFor Material-UI to work, the `className` values of all components on a page must be generated by a single instance of the [class name generator](/styles/advanced/#class-names).\n\nTo correct this issue, all components on the page need to be initialized such that there is only ever **one class name generator** among them.\n\nYou could end up accidentally using two class name generators in a variety of scenarios:\n\n- You accidentally **bundle** two versions of Material-UI. You might have a dependency not correctly setting Material-UI as a peer dependency.\n- You are using `StylesProvider` for a **subset** of your React tree.\n- You are using a bundler and it is splitting code in a way that causes multiple class name generator instances to be created.\n\n> If you are using webpack with the [SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/), try configuring the [`runtimeChunk` setting under `optimizations`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk).\n\nOverall, it\'s simple to recover from this problem by wrapping each Material-UI application with [`StylesProvider`](/styles/api/#stylesprovider) components at the top of their component trees **and using a single class name generator shared among them**.\n\n## Why do the fixed positioned elements move when a modal is opened?\n\nScrolling is blocked as soon as a modal is opened.\nThis prevents interacting with the background when the modal should be the only interactive content. However, removing the scrollbar can make your **fixed positioned elements** move.\nIn this situation, you can apply a global `.mui-fixed` class name to tell Material-UI to handle those elements.\n\n## How can I disable the ripple effect globally?\n\nThe ripple effect is exclusively coming from the `BaseButton` component.\nYou can disable the ripple effect globally by providing the following in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // Name of the component \u269b\ufe0f\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application \ud83d\udca3!\n    },\n  },\n});\n```\n\n## How can I disable transitions globally?\n\nMaterial-UI uses the same theme helper for creating all its transitions.\nTherefore you can disable all transitions by overriding the helper in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // So we have `transition: none;` everywhere\n    create: () => \'none\',\n  },\n});\n```\n\nIt can be useful to disable transitions during visual testing or to improve performance on low-end devices.\n\nYou can go one step further by disabling all transitions and animations effects:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // Name of the component \u269b\ufe0f\n    MuiCssBaseline: {\n      // Name of the rule\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\nNotice that the usage of `CssBaseline` is required for the above approach to work.\nIf you choose not to use it, you can still disable transitions and animations by including these CSS rules:\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## Do I have to use JSS to style my app?\n\nNo, it\'s not required.\nBut this dependency comes built in, so carries no additional bundle size overhead.\n\nPerhaps, however, you\'re adding some Material-UI components to an app that already uses another styling solution,\nor are already familiar with a different API, and don\'t want to learn a new one? In that case, head over to the\n[Style Library Interoperability](/guides/interoperability/) section,\nwhere we show how simple it is to restyle Material-UI components with alternative style libraries.\n\n## When should I use inline-style vs CSS?\n\nAs a rule of thumb, only use inline-style for dynamic style properties.\nThe CSS alternative provides more advantages, such as:\n\n- auto-prefixing\n- better debugging\n- media queries\n- keyframes\n\n## How do I use react-router?\n\nWe detail the [integration with third-party routing libraries](/guides/composition/#routing-libraries) like react-router, Gatsby or Next.js in our guide.\n\n## How can I access the DOM element?\n\nAll Material-UI components that should render something in the DOM forward their\nref to the underlying DOM component. This means that you can get DOM elements\nby reading the ref attached to Material-UI components:\n\n```jsx\n// or a ref setter function\nconst ref = React.createRef();\n// render\n<Button ref={ref} />;\n// usage\nconst element = ref.current;\n```\n\nIf you\'re not sure if the Material-UI component in question forwards its ref you\ncan check the API documentation under "Props" e.g. the [Button API](/api/button/#props)\nincludes\n> The ref is forwarded to the root element.\n\nindicating that you can access the DOM element with a ref.\n\n## I have several instances of styles on the page\n\nIf you are seeing a warning message in the console like the one below, you probably have several instances of `@material-ui/styles` initialized on the page.\n\n> It looks like there are several instances of `@material-ui/styles` initialized in this application.\n> This may cause theme propagation issues, broken class names, specificity issues, and make your application bigger without a good reason.\n\n### Possible reasons\n\nThere are several common reasons for this to happen:\n\n- You have another `@material-ui/styles` library somewhere in your dependencies.\n- You have a monorepo structure for your project (e.g, lerna, yarn workspaces) and `@material-ui/styles` module is a dependency in more than one package (this one is more or less the same as the previous one).\n- You have several applications that are using `@material-ui/styles` running on the same page (e.g., several entry points in webpack are loaded on the same page).\n\n### Duplicated module in node_modules\n\nIf you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder.\n\nIf none of these commands identified the duplication, try analyzing your bundle for multiple instances of @material-ui/styles. You can just check your bundle source, or use a tool like [source-map-explorer](https://github.com/danvk/source-map-explorer) or [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer).\n\nIf you identified that duplication is the issue that you are encountering there are several things you can try to solve it:\n\nIf you are using npm you can try running `npm dedupe`.\nThis command searches the local dependencies and tries to simplify the structure by moving common dependencies further up the tree.\n\nIf you are using webpack, you can change the way it will [resolve](https://webpack.js.org/configuration/resolve/#resolve-modules) the @material-ui/styles module. You can overwrite the default order in which webpack will look for your dependencies and make your application node_modules more prioritized than default node module resolution order:\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### Usage with Lerna\n\nOne possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file. Try running the bootstrap option with the --hoist flag.\n\n```sh\nlerna bootstrap --hoist\n```\n\nAlternatively, you can remove @material-ui/styles from your package.json file and hoist it manually to your top-level package.json file.\n\nExample of a package.json file in a Lerna root folder\n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### Running multiple applications on one page\n\nIf you have several applications running on one page, consider using one @material-ui/styles module for all of them. If you are using webpack, you can use [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/) to create an explicit [vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), that will contain the @material-ui/styles module:\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## My App doesn\'t render correctly on the server\n\nIf it doesn\'t work, in 99% of cases it\'s a configuration issue.\nA missing property, a wrong call order, or a missing component \u2013 server-side rendering is strict about configuration, and the best way to find out what\'s wrong is to compare your project to an already working setup.\nCheck out the [reference implementations](/guides/server-rendering/#reference-implementations), bit by bit.\n\n### CSS works only on first load then is missing\n\nThe CSS is only generated on the first load of the page.\nThen, the CSS is missing on the server for consecutive requests.\n\n#### Action to Take\n\nThe styling solution relies on a cache, the _sheets manager_, to only inject the CSS once per component type\n(if you use two buttons, you only need the CSS of the button one time).\nYou need to create **a new `sheets` instance for each request**.\n\n*example of fix:*\n```diff\n-// Create a sheets instance.\n-const sheets = new ServerStyleSheets();\n\nfunction handleRender(req, res) {\n+ // Create a sheets instance.\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // Render the component to a string.\n  const html = ReactDOMServer.renderToString(\n```\n\n### React class name hydration mismatch\n\nThere is a class name mismatch between the client and the server. It might work for the first request.\nAnother symptom is that the styling changes between initial page load and the downloading of the client scripts.\n\n#### Action to Take\n\nThe class names value relies on the concept of [class name generator](/styles/advanced/#class-names).\nThe whole page needs to be rendered with **a single generator**.\nThis generator needs to behave identically on the server and on the client. For instance:\n\n- You need to provide a new class name generator for each request.\nBut you shouldn\'t share a `createGenerateClassName()` between different requests:\n\n*example of fix:*\n```diff\n-// Create a new class name generator.\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n+ // Create a new class name generator.\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // Render the component to a string.\n  const html = ReactDOMServer.renderToString(\n```\n\n- You need to verify that your client and server are running the **exactly the same version** of Material-UI.\nIt is possible that a mismatch of even minor versions can cause styling problems.\nTo check version numbers, run `npm list @material-ui/core` in the environment where you build your application and also in your deployment environment.\n\n  You can also ensure the same version in different environments by specifying a specific MUI version in the dependencies of your package.json.\n\n*example of fix (package.json):*\n```diff\n  "dependencies": {\n    ...\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- You need to make sure that the server and the client share the same `process.env.NODE_ENV` value.\n\n## Why are the colors I am seeing different from what I see here?\n\nThe documentation site is using a custom theme. Hence, the color palette is\ndifferent from the default theme that Material-UI ships. Please refer to [this\npage](/customization/theming/) to learn about theme customization.\n\n## Why does component X require a DOM node in a prop instead of a ref object?\n\nComponents like the [Portal](/api/portal/#props) or [Popper](/api/popper/#props) require a DOM node in the `container` or `anchorEl` prop respectively.\nIt seems convenient to simply pass a ref object in those props and let Material-UI access the current value.\nThis works in a simple scenario:\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>portaled children</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\nwhere `Portal` would only mount the children into the container when `container.current` is available.\nHere is a naive implementation of Portal:\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\nWith this simple heuristic `Portal` might re-render after it mounts because refs are up-to-date before any effects run.\nHowever, just because a ref is up-to-date doesn\'t mean it points to a defined instance.\nIf the ref is attached to a ref forwarding component it is not clear when the DOM node will be available.\nIn the example above, the `Portal` would run an effect once, but might not re-render because `ref.current` is still `null`.\nThis is especially apparent for React.lazy components in Suspense.\nThe above implementation could also not account for a change in the DOM node.\n\nThis is why we require a prop with the actual DOM node so that React can take care of determining\nwhen the `Portal` should re-render:\n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Portaled</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## What\'s the clsx dependency for?\n\n[clsx](https://github.com/lukeed/clsx) is a tiny utility for constructing `className` strings conditionally, out of an object with keys being the class strings, and values being booleans.\n\nInstead of writing:\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ? \'Mui-selected\' : \'\'}`}\n  />\n);\n```\n\nyou can do:\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```\n'},it5t:function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id="it5t"},mhEe:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return u}));var a=t("mXGw"),o=t.n(a),r=t("e+1t"),i=t("kVtE"),s=o.a.createElement,l=t("it5t"),c=t("T+Pw");function u(e){var n=e.demos,t=e.docs;return s(r.a,{demos:n,docs:t,requireDemo:l})}u.getInitialProps=function(){var e=Object(i.a)({pageFilename:"getting-started/faq",requireRaw:c});return{demos:e.demos,docs:e.docs}}},tS4E:function(e,n){e.exports='# \u3088\u304f\u3042\u308b\u8cea\u554f\u3068\u56de\u7b54\n\n<p class="description">\u7279\u5b9a\u306e\u554f\u984c\u3067\u7acb\u3061\u5f80\u751f\u3057\u3066\u3044\u307e\u3059\u304b\uff1f \u7279\u5b9a\u306e\u554f\u984c\u3067\u7acb\u3061\u5f80\u751f\u3057\u3066\u3044\u307e\u3059\u304b\uff1f \u7279\u5b9a\u306e\u554f\u984c\u3067\u7acb\u3061\u5f80\u751f\u3057\u3066\u3044\u307e\u3059\u304b\uff1f Check some of these common gotchas first in the FAQ.</p>\n\nIf you still can\'t find what you\'re looking for, you can refer to our [support page](/getting-started/support/).\n\n## Material-UI uses the same theme helper for creating all its transitions. Therefore you can disable all transitions by overriding the helper in your theme:\n\nMaterial-UI\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u65b9\u6cd5\u306f\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002\n\n- **\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5e03\u6559\u3059\u308b** **\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5e03\u6559\u3059\u308b** **\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5e03\u6559\u3059\u308b** **\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5e03\u6559\u3059\u308b** **\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5e03\u6559\u3059\u308b** Evangelize Material-UI by [linking to material-ui.com](https://mui.com/) on your website, every backlink matters. Follow us on [Twitter](https://twitter.com/MaterialUI), like and retweet the important news. Or just talk about us with your friends.\n- **Give us feedback**. Tell us what we\'re doing well or where we can improve. Please upvote (\ud83d\udc4d) the issues that you are the most interested in seeing solved.\n- **Help new users**. You can answer questions on [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui).\n- **Make changes happen**. \n  - Edit the documentation. Every page has an "EDIT THIS PAGE" link in the top right.\n  - Report bugs or missing features by [creating an issue](https://github.com/mui-org/material-ui/issues/new).\n  - Review and comment on existing [pull requests](https://github.com/mui-org/material-ui/pulls) and [issues](https://github.com/mui-org/material-ui/issues).\n  - Help [translate](https://translate.material-ui.com) the documentation.\n  - [Improve our documentation](https://github.com/mui-org/material-ui/tree/master/docs), fix bugs, or add features by [submitting a pull request](https://github.com/mui-org/material-ui/pulls).\n- **Support us financially on [OpenCollective](https://opencollective.com/material-ui)**. If you use Material-UI in a commercial project and would like to support its continued development by becoming a Sponsor, or in a side or hobby project and would like to become a Backer, you can do so through OpenCollective. All funds donated are managed transparently, and Sponsors receive recognition in the README and on the Material-UI home page.\n\n## production\u30d3\u30eb\u30c9\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u6b63\u3057\u304f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u306a\u3044\u306e\u306f\u306a\u305c\u3067\u3059\u304b\uff1f\n\nMaterial-UI\u304c\u6a5f\u80fd\u3059\u308b\u305f\u3081\u306b\u306f\u3001`className`\u30da\u30fc\u30b8\u4e0a\u306e\u3059\u3079\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5024\u306f\u3001[\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf](/styles/advanced/#class-names)\u306e\u5358\u4e00\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Material-UI\u304c\u6a5f\u80fd\u3059\u308b\u305f\u3081\u306b\u306f\u3001`className`\u30da\u30fc\u30b8\u4e0a\u306e\u3059\u3079\u3066\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5024\u306f\u3001[\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf](/styles/advanced/#class-names)\u306e\u5358\u4e00\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 The #1 reason this likely happens is due to class name conflicts once your code is in a production bundle.\n\nTo correct this issue, all components on the page need to be initialized such that there is only ever **one class name generator** among them.\n\n\u3055\u307e\u3056\u307e\u306a\u30b7\u30ca\u30ea\u30aa\u3067\u3001\u8aa4\u3063\u30662\u3064\u306e\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u4e8b\u4f8b\n\n- If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this. --hoist\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066bootstrap option \u3092\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n- You are using `StylesProvider` for a **subset** of your React tree.\n- \u30d0\u30f3\u30c9\u30e9\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3044\u3066\u3001\u305d\u308c\u304c\u539f\u56e0\u3067\u8907\u6570\u306e\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4f5c\u6210\u3055\u308c\u308b\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u5206\u5272\u3057\u3066\u3044\u308b\u5834\u5408\u3002\n\n> Web\u30d1\u30c3\u30af\u3067[SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/)\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001[`\u6700\u9069\u5316`\u3067`runtimeChunk`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk)\u8a2d\u5b9a\u3092\u69cb\u6210\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nOverall, it\'s simple to recover from this problem by wrapping each Material-UI application with [`StylesProvider`](/styles/api/#stylesprovider) components at the top of their component trees **and using a single class name generator shared among them**.\n\n## \u30e2\u30fc\u30c0\u30eb\u3092\u958b\u304f\u3068\u3001fixed position\u3055\u308c\u305fDOM\u304c\u79fb\u52d5\u3059\u308b\u306e\u306f\u306a\u305c\u3067\u3059\u304b\uff1f\n\nScrolling is blocked as soon as a modal is opened. This prevents interacting with the background when the modal should be the only interactive content. However, removing the scrollbar can make your **fixed positioned elements** move. \u3053\u306e\u5834\u5408\u3001Material-UI\u306b\u3053\u308c\u3089\u306eDOM\u3092\u51e6\u7406\u3059\u308b\u3088\u3046\u306b\u4f1d\u3048\u308b\u305f\u3081\u306b\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u306a `.mui-fixed`\u30af\u30e9\u30b9\u540d\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u6ce2\u7d0b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u7121\u52b9\u306b\u3059\u308b\u65b9\u6cd5\u306f\uff1f\n\nMaterial-UI uses the same theme helper for creating all its transitions. Therefore you can disable all transitions by overriding the helper in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // Name of the component \u269b\ufe0f\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application \ud83d\udca3!\n    },\n  },\n});\n```\n\n## \u79fb\u884c\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u7121\u52b9\u306b\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u304b\uff1f\n\nMaterial-UI uses the same theme helper for creating all its transitions. Therefore you can disable all transitions by overriding the helper in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // So we have `transition: none;` everywhere\n    create: () => \'none\',\n  },\n});\n```\n\nIt can be useful to disable transitions during visual testing or to improve performance on low-end devices.\n\nYou can go one step further by disabling all transitions and animations effects:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // Name of the component \u269b\ufe0f\n    MuiCssBaseline: {\n      // Name of the rule\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\nNotice that the usage of `CssBaseline` is required for the above approach to work. If you choose not to use it, you can still disable transitions and animations by including these CSS rules:\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## \u30a2\u30d7\u30ea\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306fJSS\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304b\uff1f\n\n\u3044\u3044\u3048\u3001\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u3044\u3044\u3048\u3001\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 But this dependency comes built in, so carries no additional bundle size overhead. \u3044\u3044\u3048\u3001\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 But this dependency comes built in, so carries no additional bundle size overhead.\n\n\u305d\u306e\u5834\u5408\u306f\u3001[\u30b9\u30bf\u30a4\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u76f8\u4e92\u904b\u7528](/guides/interoperability/)\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u3001Material-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5225\u306e\u30b9\u30bf\u30a4\u30eb\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30b9\u30bf\u30a4\u30eb\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3044\u304b\u306b\u7c21\u5358\u3067\u3042\u308b\u304b\u3092\u793a\u3057\u307e\u3059\u3002 \u305d\u306e\u5834\u5408\u306f\u3001[\u30b9\u30bf\u30a4\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u76f8\u4e92\u904b\u7528](/guides/interoperability/)\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u3001Material-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5225\u306e\u30b9\u30bf\u30a4\u30eb\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30b9\u30bf\u30a4\u30eb\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3044\u304b\u306b\u7c21\u5358\u3067\u3042\u308b\u304b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u30a4\u30f3\u30e9\u30a4\u30f3\u30b9\u30bf\u30a4\u30eb\u3068CSS\u306e\u3069\u3061\u3089\u3092\u4f7f\u7528\u3059\u3079\u304d\u304b\n\n\u7d4c\u9a13\u5247\u3068\u3057\u3066\u3001\u52d5\u7684style\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u306finline-style\u306e\u307f\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002 CSS\u306e\u4ee3\u66ff\u624b\u6bb5\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3088\u308a\u591a\u304f\u306e\u5229\u70b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 CSS\u306e\u4ee3\u66ff\u624b\u6bb5\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3088\u308a\u591a\u304f\u306e\u5229\u70b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 CSS\u306e\u4ee3\u66ff\u624b\u6bb5\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3088\u308a\u591a\u304f\u306e\u5229\u70b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 CSS\u306e\u4ee3\u66ff\u624b\u6bb5\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3088\u308a\u591a\u304f\u306e\u5229\u70b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 CSS\u306e\u4ee3\u66ff\u624b\u6bb5\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3088\u308a\u591a\u304f\u306e\u5229\u70b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 CSS\u306e\u4ee3\u66ff\u624b\u6bb5\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u3088\u308a\u591a\u304f\u306e\u5229\u70b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n- auto-prefixing\n- \u30c7\u30d0\u30c3\u30af\u306e\u3057\u3084\u3059\u3055\n- \u30e1\u30c7\u30a3\u30a2\u30af\u30a8\u30ea\n- keyframes\n\n## react-router\u306e\u4f7f\u3044\u65b9\u306f\uff1f\n\nWe detail the [integration with third-party routing libraries](/guides/composition/#routing-libraries) like react-router, Gatsby or Next.js in our guide.\n\n## \u3069\u3046\u3084\u3063\u3066DOM\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u304b\uff1f\n\nDOM\u5185\u306e\u4f55\u304b\u3092\u63cf\u753b\u3059\u308b\u3059\u3079\u3066\u306eMaterial-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u305d\u306eref\u3092\u57fa\u790e\u3068\u306a\u308bDOM\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8ee2\u9001\u3057\u307e\u3059\u3002 \u3064\u307e\u308a\u3001Material-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u305fref\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3067DOM\u8981\u7d20 \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 DOM\u5185\u306e\u4f55\u304b\u3092\u63cf\u753b\u3059\u308b\u3059\u3079\u3066\u306eMaterial-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u305d\u306eref\u3092\u57fa\u790e\u3068\u306a\u308bDOM\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8ee2\u9001\u3057\u307e\u3059\u3002 \u3064\u307e\u308a\u3001Material-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u305fref\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3067DOM\u8981\u7d20 \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 DOM\u5185\u306e\u4f55\u304b\u3092\u63cf\u753b\u3059\u308b\u3059\u3079\u3066\u306eMaterial-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u305d\u306eref\u3092\u57fa\u790e\u3068\u306a\u308bDOM\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8ee2\u9001\u3057\u307e\u3059\u3002 \u3064\u307e\u308a\u3001Material-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u305fref\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3067DOM\u8981\u7d20 \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 DOM\u5185\u306e\u4f55\u304b\u3092\u63cf\u753b\u3059\u308b\u3059\u3079\u3066\u306eMaterial-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u305d\u306eref\u3092\u57fa\u790e\u3068\u306a\u308bDOM\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8ee2\u9001\u3057\u307e\u3059\u3002 \u3064\u307e\u308a\u3001Material-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u305fref\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3067DOM\u8981\u7d20 \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 DOM\u5185\u306e\u4f55\u304b\u3092\u63cf\u753b\u3059\u308b\u3059\u3079\u3066\u306eMaterial-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3001\u305d\u306eref\u3092\u57fa\u790e\u3068\u306a\u308bDOM\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u8ee2\u9001\u3057\u307e\u3059\u3002 \u3064\u307e\u308a\u3001Material-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u305fref\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u3067DOM\u8981\u7d20 \u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```jsx\n// or a ref setter function\nconst ref = React.createRef();\n// render\n<Button ref={ref} />;\n// usage\nconst element = ref.current;\n```\n\n\u554f\u984c\u306eMaterial-UI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u305d\u306eref\u3092\u8ee2\u9001\u3059\u308b\u304b\u3069\u3046\u304b\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001 [Button API](/api/button/#props)\u306a\u3069\u3001\u300c\u30d7\u30ed\u30d1\u30c6\u30a3\u300d\u306eAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002 \u542b\u3080\n\n> Ref\u306f\u30eb\u30fc\u30c8\u8981\u7d20\u306b\u8ee2\u9001\u3055\u308c\u307e\u3059\u3002\n\nref\u3092\u4f7f\u7528\u3057\u3066DOM\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\n\n## \u30da\u30fc\u30b8\u306b\u30b9\u30bf\u30a4\u30eb\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\n\n\u6b21\u306e\u3088\u3046\u306a\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u306f\u3001\u30da\u30fc\u30b8\u4e0a\u3067`@material-ui/styles`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3044\u304f\u3064\u304b\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n> It looks like there are several instances of `@material-ui/styles` initialized in this application. This may cause theme propagation issues, broken class names, specificity issues, and make your application bigger without a good reason.\n\n### \u8003\u3048\u3089\u308c\u308b\u7406\u7531:\n\n\u3053\u308c\u304c\u8d77\u3053\u308b\u4e00\u822c\u7684\u306a\u7406\u7531\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n\n- \u4f9d\u5b58\u95a2\u4fc2\u306e\u3069\u3053\u304b\u306b\u5225\u306e`@material-ui/styles`\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u307e\u3059\u3002\n- \u30d7\u30ed\u30b8\u30a7\u30af\u30c8(\u4f8b\uff1ayarn workspaces)\u306bmonorepo\u69cb\u9020\u304c\u3042\u308a\u3001`@material-ui/styles`\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u8907\u6570\u306e\u30d1\u30c3\u30b1\u30fc\u30b8(\u3053\u308c\u306f\u524d\u306e\u3068\u3060\u3044\u305f\u3044\u540c\u3058\u3067\u3059)\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n- `@material-ui/styles`\u3092\u4f7f\u7528\u3059\u308b\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u540c\u3058\u30da\u30fc\u30b8(\u305f\u3068\u3048\u3070\u3001webpack\u306e\u8907\u6570\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u304c\u540c\u3058\u30da\u30fc\u30b8\u306b\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3002)\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n### node_modules\u306e\u91cd\u8907\u30e2\u30b8\u30e5\u30fc\u30eb\n\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\nIf you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this. --hoist\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066bootstrap option \u3092\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u91cd\u8907\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u554f\u984c\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u89e3\u6c7a\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\nNpm\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001`npm dedupe`\u3092\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002 \u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u691c\u7d22\u3057\u3001\u5171\u901a\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30c4\u30ea\u30fc\u306e\u4e0a\u4f4d\u306b\u79fb\u52d5\u3057\u3066\u69cb\u9020\u3092\u5358\u7d14\u5316\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\n\nOne possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file. --hoist\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066bootstrap option \u3092\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### Lerna\u3067\u306e\u4f7f\u7528\n\nOne possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file. --hoist\u30d5\u30e9\u30b0\u3092\u6307\u5b9a\u3057\u3066bootstrap option \u3092\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n```sh\nlerna bootstrap --hoist\n```\n\n\u307e\u305f\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089@material-ui/styles\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002json\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u624b\u52d5\u3067\u6700\u4e0a\u4f4d\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u4e0a\u3052\u307e\u3059\u3002json\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nLerna\u30eb\u30fc\u30c8\u30d5\u30a9\u30eb\u30c0\u30fc\u5185\u306epackage.json\u30d5\u30a1\u30a4\u30eb\u306e\u4f8b\n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### 1\u3064\u306e\u30da\u30fc\u30b8\u3067\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\n\n1\u3064\u306e\u30da\u30fc\u30b8\u3067\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3089\u3059\u3079\u3066\u306b1\u3064\u306e@material-ui/styles\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002 1\u3064\u306e\u30da\u30fc\u30b8\u3067\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3089\u3059\u3079\u3066\u306b1\u3064\u306e@material-ui/styles\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Web\u30d1\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001[CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/)\u3092\u4f7f\u7528\u3057\u3066@material-ui/styles\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u542b\u3080\u660e\u793a\u7684\u306a[vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 1\u3064\u306e\u30da\u30fc\u30b8\u3067\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3089\u3059\u3079\u3066\u306b1\u3064\u306e@material-ui/styles\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Web\u30d1\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001[CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/)\u3092\u4f7f\u7528\u3057\u3066@material-ui/styles\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u542b\u3080\u660e\u793a\u7684\u306a[vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 1\u3064\u306e\u30da\u30fc\u30b8\u3067\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3089\u3059\u3079\u3066\u306b1\u3064\u306e@material-ui/styles\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Web\u30d1\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001[CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/)\u3092\u4f7f\u7528\u3057\u3066@material-ui/styles\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u542b\u3080\u660e\u793a\u7684\u306a[vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## \u30b5\u30fc\u30d0\u30fc\u3067\u30a2\u30d7\u30ea\u304c\u6b63\u3057\u304f\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u306a\u3044\n\n\u52d5\u4f5c\u3057\u306a\u3044\u5834\u5408\u306f\u300199%\u306e\u30b1\u30fc\u30b9\u3067\u8a2d\u5b9a\u306e\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u52d5\u4f5c\u3057\u306a\u3044\u5834\u5408\u306f\u300199%\u306e\u30b1\u30fc\u30b9\u3067\u8a2d\u5b9a\u306e\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u52d5\u4f5c\u3057\u306a\u3044\u5834\u5408\u306f\u300199%\u306e\u30b1\u30fc\u30b9\u3067\u8a2d\u5b9a\u306e\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u52d5\u4f5c\u3057\u306a\u3044\u5834\u5408\u306f\u300199%\u306e\u30b1\u30fc\u30b9\u3067\u8a2d\u5b9a\u306e\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002 \u52d5\u4f5c\u3057\u306a\u3044\u5834\u5408\u306f\u300199%\u306e\u30b1\u30fc\u30b9\u3067\u8a2d\u5b9a\u306e\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002 A missing property, a wrong call order, or a missing component \u2013 server-side rendering is strict about configuration, and the best way to find out what\'s wrong is to compare your project to an already working setup. Check out the [reference implementations](/guides/server-rendering/#reference-implementations), bit by bit.\n\n### CSS\u306f\u6700\u521d\u306e\u30ed\u30fc\u30c9\u3067\u306e\u307f\u6a5f\u80fd\u3057\u3001\u305d\u306e\u5f8c\u6b20\u843d\u3057\u307e\u3059\n\nCSS\u306f\u3001\u30da\u30fc\u30b8\u306e\u6700\u521d\u306e\u30ed\u30fc\u30c9\u6642\u306b\u306e\u307f\u751f\u6210\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001CSS\u306f\u9023\u7d9a\u3057\u305f\u8981\u6c42\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d0\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002 CSS\u306f\u3001\u30da\u30fc\u30b8\u306e\u6700\u521d\u306e\u30ed\u30fc\u30c9\u6642\u306b\u306e\u307f\u751f\u6210\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001CSS\u306f\u9023\u7d9a\u3057\u305f\u8981\u6c42\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d0\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002 CSS\u306f\u3001\u30da\u30fc\u30b8\u306e\u6700\u521d\u306e\u30ed\u30fc\u30c9\u6642\u306b\u306e\u307f\u751f\u6210\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001CSS\u306f\u9023\u7d9a\u3057\u305f\u8981\u6c42\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d0\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002 CSS\u306f\u3001\u30da\u30fc\u30b8\u306e\u6700\u521d\u306e\u30ed\u30fc\u30c9\u6642\u306b\u306e\u307f\u751f\u6210\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001CSS\u306f\u9023\u7d9a\u3057\u305f\u8981\u6c42\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d0\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002 CSS\u306f\u3001\u30da\u30fc\u30b8\u306e\u6700\u521d\u306e\u30ed\u30fc\u30c9\u6642\u306b\u306e\u307f\u751f\u6210\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001CSS\u306f\u9023\u7d9a\u3057\u305f\u8981\u6c42\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d0\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002 CSS\u306f\u3001\u30da\u30fc\u30b8\u306e\u6700\u521d\u306e\u30ed\u30fc\u30c9\u6642\u306b\u306e\u307f\u751f\u6210\u3055\u308c\u307e\u3059\u3002 \u3053\u306e\u5834\u5408\u3001CSS\u306f\u9023\u7d9a\u3057\u305f\u8981\u6c42\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d0\u306b\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\n\n#### \u5b9f\u884c\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\n\nThe styling solution relies on a cache, the *sheets manager*, to only inject the CSS once per component type (if you use two buttons, you only need the CSS of the button one time). \u8981\u6c42\u3054\u3068\u306b**\u65b0\u3057\u3044`\u30b7\u30fc\u30c8`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059**\u3002\n\n*\u4fee\u6b63\u306e\u4f8b\uff1a*\n\n```diff\n-const sheets = new ServerStyleSheets();\n\nfunction handleRender(req, res) {\n\n+ // Create a sheets instance.\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // Render the component to a string.\nconst html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  -// Create a sheets instance.\n```\n\n### React\u30af\u30e9\u30b9\u540d\u306e\u30cf\u30a4\u30c9\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u4e0d\u4e00\u81f4\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u306e\u9593\u306b\u30af\u30e9\u30b9\u540d\u306e\u4e0d\u4e00\u81f4\u304c\u3042\u308a\u307e\u3059\u3002 \u6700\u521d\u306e\u8981\u6c42\u3067\u6a5f\u80fd\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u30461\u3064\u306e\u75c7\u72b6\u306f\u3001\u521d\u671f\u30da\u30fc\u30b8\u30fb\u30ed\u30fc\u30c9\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u9593\u3067\u30b9\u30bf\u30a4\u30eb\u8a2d\u5b9a\u304c\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u3067\u3059\u3002 \u6700\u521d\u306e\u8981\u6c42\u3067\u6a5f\u80fd\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \u30461\u3064\u306e\u75c7\u72b6\u306f\u3001\u521d\u671f\u30da\u30fc\u30b8\u30fb\u30ed\u30fc\u30c9\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u9593\u3067\u30b9\u30bf\u30a4\u30eb\u8a2d\u5b9a\u304c\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u3067\u3059\u3002\n\n#### \u5b9f\u884c\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\n\n\u30af\u30e9\u30b9\u540d\u306e\u5024\u306f\u3001[class name generator](/styles/advanced/#class-names)\u306e\u6982\u5ff5\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002 \u30da\u30fc\u30b8\u5168\u4f53\u3092**\u5358\u4e00\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059** \u3002 \u3053\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\uff1a \u30da\u30fc\u30b8\u5168\u4f53\u3092**\u5358\u4e00\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059** \u3002 \u3053\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\uff1a \u30da\u30fc\u30b8\u5168\u4f53\u3092**\u5358\u4e00\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059** \u3002 \u3053\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\uff1a \u30da\u30fc\u30b8\u5168\u4f53\u3092**\u5358\u4e00\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059** \u3002 \u3053\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u4f8b\u3048\u3070\uff1a\n\n- \u8981\u6c42\u3054\u3068\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u7570\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u9593\u3067`createGenerateClassName()`\u3092\u5171\u6709\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u8981\u6c42\u3054\u3068\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u7570\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u9593\u3067`createGenerateClassName()`\u3092\u5171\u6709\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u8981\u6c42\u3054\u3068\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u7570\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u9593\u3067`createGenerateClassName()`\u3092\u5171\u6709\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u8981\u6c42\u3054\u3068\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u7570\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u9593\u3067`createGenerateClassName()`\u3092\u5171\u6709\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u8981\u6c42\u3054\u3068\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u7570\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u9593\u3067`createGenerateClassName()`\u3092\u5171\u6709\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u8981\u6c42\u3054\u3068\u306b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u7570\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u9593\u3067`createGenerateClassName()`\u3092\u5171\u6709\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n*\u4fee\u6b63\u306e\u4f8b\uff1a*\n\n```diff\n-// Create a new class name generator.\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n\n+ // Create a new class name generator.\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // Render the component to a string.\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  -// Create a sheets instance.\n```\n\n- \u3057\u304b\u3057\u3001\u7570\u306a\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u9593\u3067**createGenerateClassName()**\u3092\u5171\u6709\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u30de\u30a4\u30ca\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u4e0d\u4e00\u81f4\u3067\u3082\u3001\u30b9\u30bf\u30a4\u30eb\u306e\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u74b0\u5883\u3068\u914d\u5099\u74b0\u5883\u3067`npm list@material-ui/core`\u3092\u5b9f\u884c\u3057\u307e\u3059\n  \n    Package.json\u306e\u4f9d\u5b58\u95a2\u4fc2\u306b\u7279\u5b9a\u306eMUI\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u7570\u306a\u308b\u74b0\u5883\u3067\u540c\u3058\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n*\u4fee\u6b63\u306e\u4f8b\uff08package.json\uff09\uff1a*\n\n```diff\n  "dependencies": {\n    ...\n\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- \u30b5\u30fc\u30d0\u30fc\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u540c\u3058`process.env.NODE_ENV` value\u3092\u5171\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u79c1\u304c\u898b\u3066\u3044\u308b\u8272\u3068\u3053\u306e\u30b5\u30a4\u30c8\u3067\u898b\u3066\u3044\u308b\u8272\u304c\u9055\u3046\u306e\u306f\u306a\u305c\u3067\u3059\u304b\uff1f\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b5\u30a4\u30c8\u306f\u30ab\u30b9\u30bf\u30e0\u30c6\u30fc\u30de\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u304c\u3042\u308bMaterial-UI\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30fc\u30de\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u30c6\u30fc\u30de\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306b\u3064\u3044\u3066\u5b66\u3076\u306b\u306f\u3001\u3053\u306e[\u30da\u30fc\u30b8](/customization/theming/)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u304c\u3042\u308bMaterial-UI\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30fc\u30de\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u30c6\u30fc\u30de\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306b\u3064\u3044\u3066\u5b66\u3076\u306b\u306f\u3001\u3053\u306e[\u30da\u30fc\u30b8](/customization/theming/)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u304c\u3042\u308bMaterial-UI\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30fc\u30de\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u30c6\u30fc\u30de\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306b\u3064\u3044\u3066\u5b66\u3076\u306b\u306f\u3001\u3053\u306e[\u30da\u30fc\u30b8](/customization/theming/)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u304c\u3042\u308bMaterial-UI\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30fc\u30de\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u30c6\u30fc\u30de\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306b\u3064\u3044\u3066\u5b66\u3076\u306b\u306f\u3001\u3053\u306e[\u30da\u30fc\u30b8](/customization/theming/)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u3057\u305f\u304c\u3063\u3066\u3001\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u304c\u3042\u308bMaterial-UI\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c6\u30fc\u30de\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u30c6\u30fc\u30de\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306b\u3064\u3044\u3066\u5b66\u3076\u306b\u306f\u3001\u3053\u306e[\u30da\u30fc\u30b8](/customization/theming/)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Component X\u304cref\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4ee3\u308f\u308a\u306bprop\u3067DOM\u30ce\u30fc\u30c9\u3092\u5fc5\u8981\u3068\u3059\u308b\u306e\u306f\u306a\u305c\u3067\u3059\u304b\uff1f\n\n[Portal](/api/portal/#props)\u307e\u305f\u306f[Popper](/api/popper/#props)\u306e\u3088\u3046\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u306f\u3001\u305d\u308c\u305e\u308c `container` \u307e\u305f\u306f`anchorEl`\u30d7\u30ed\u30d1\u30c6\u30a3\u306bDOM\u30ce\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002 \u3053\u308c\u3089\u306e\u30d7\u30ed\u30c3\u30d7\u306bref\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3001Material-UI\u306b\u73fe\u5728\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3055\u305b\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u30b7\u30ca\u30ea\u30aa\u3067\u6a5f\u80fd\u3057\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u30d7\u30ed\u30c3\u30d7\u306bref\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u3001Material-UI\u306b\u73fe\u5728\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3055\u305b\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002 \u3053\u308c\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u30b7\u30ca\u30ea\u30aa\u3067\u6a5f\u80fd\u3057\u307e\u3059\u3002\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>portaled children</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\n\u3053\u3053\u3067\u3001`Portal`\u306f\u3001`container.current`\u304c\u4f7f\u7528\u53ef\u80fd\u306e\u5834\u5408\u306b\u306e\u307f\u3001\u5b50\u3092\u30b3\u30f3\u30c6\u30ca\u30fc\u306b\u30de\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002 \u30dd\u30fc\u30bf\u30eb\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 \u30dd\u30fc\u30bf\u30eb\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 \u30dd\u30fc\u30bf\u30eb\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 \u30dd\u30fc\u30bf\u30eb\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 \u30dd\u30fc\u30bf\u30eb\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002 \u30dd\u30fc\u30bf\u30eb\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\n\u3053\u306e\u5358\u7d14\u306a\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306a` Portal ` ref\u306f\u30a8\u30d5\u30a7\u30af\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u6700\u65b0\u3067\u3042\u308b\u305f\u3081\u3001\u30de\u30a6\u30f3\u30c8\u5f8c\u306b\u518d\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u305f\u3060\u3057\u3001ref\u304c\u6700\u65b0\u3067\u3042\u308b\u304b\u3089\u3068\u3044\u3063\u3066\u3001\u5b9a\u7fa9\u6e08\u307f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6307\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 ref\u304cref\u8ee2\u9001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001DOM\u30ce\u30fc\u30c9\u304c\u3044\u3064\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308b\u304b\u306f\u4e0d\u660e\u3067\u3059\u3002 \u3053\u306e\u5358\u7d14\u306a\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306a`Portal` ref\u306f\u30a8\u30d5\u30a7\u30af\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u524d\u306b\u6700\u65b0\u3067\u3042\u308b\u305f\u3081\u3001\u30de\u30a6\u30f3\u30c8\u5f8c\u306b\u518d\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u305f\u3060\u3057\u3001ref\u304c\u6700\u65b0\u3067\u3042\u308b\u304b\u3089\u3068\u3044\u3063\u3066\u3001\u5b9a\u7fa9\u6e08\u307f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6307\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 ref\u304cref\u8ee2\u9001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001DOM\u30ce\u30fc\u30c9\u304c\u3044\u3064\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308b\u304b\u306f\u4e0d\u660e\u3067\u3059\u3002 In the example above, the `Portal` would run an effect once, but might not re-render because `ref.current` is still `null`. This is especially apparent for React.lazy components in Suspense. \u4e0a\u8a18\u306e\u5b9f\u88c5\u3067\u306f\u3001DOM\u30ce\u30fc\u30c9\u306e\u5909\u66f4\u3082\u8003\u616e\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u3053\u306e\u305f\u3081\u3001React\u304c`Portal`\u3092\u3044\u3064\u518d\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u5b9f\u969b\u306eDOM\u30ce\u30fc\u30c9\u3092\u6301\u3064\u30d7\u30ed\u30c3\u30d7\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Portaled</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## Clsx\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u4f55\u3067\u3059\u304b\uff1f\n\n[clsx](https://github.com/lukeed/clsx) is a tiny utility for constructing `className` strings conditionally, out of an object with keys being the class strings, and values being booleans.\n\nInstead of writing:\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? // let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ?\n```\n\nyou can do:\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```'},toGW:function(e,n){e.exports='# H\xe4ufige Fragen\n\n<p class="description">Festgefahren bei einem bestimmten Problem? Check some of these common gotchas first in the FAQ.</p>\n\nIf you still can\'t find what you\'re looking for, you can refer to our [support page](/getting-started/support/).\n\n## Material-UI ist gro\xdfartig. Wie kann ich das Projekt unterst\xfctzen?\n\nEs gibt viele M\xf6glichkeiten, die Material-UI zu unterst\xfctzen:\n\n- **Verbreiten Sie Material-Ui**. Evangelize Material-UI by [linking to material-ui.com](https://mui.com/) on your website, every backlink matters. Follow us on [Twitter](https://twitter.com/MaterialUI), like and retweet the important news. Or just talk about us with your friends.\n- **Give us feedback**. Tell us what we\'re doing well or where we can improve. Please upvote (\ud83d\udc4d) the issues that you are the most interested in seeing solved.\n- **Help new users**. You can answer questions on [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui).\n- **Make changes happen**. \n  - Edit the documentation. Every page has an "EDIT THIS PAGE" link in the top right.\n  - Report bugs or missing features by [creating an issue](https://github.com/mui-org/material-ui/issues/new).\n  - Review and comment on existing [pull requests](https://github.com/mui-org/material-ui/pulls) and [issues](https://github.com/mui-org/material-ui/issues).\n  - Help [translate](https://translate.material-ui.com) the documentation.\n  - [Improve our documentation](https://github.com/mui-org/material-ui/tree/master/docs), fix bugs, or add features by [submitting a pull request](https://github.com/mui-org/material-ui/pulls).\n- **Support us financially on [OpenCollective](https://opencollective.com/material-ui)**. If you use Material-UI in a commercial project and would like to support its continued development by becoming a Sponsor, or in a side or hobby project and would like to become a Backer, you can do so through OpenCollective. All funds donated are managed transparently, and Sponsors receive recognition in the README and on the Material-UI home page.\n\n## Warum werden meine Komponenten in Produktions-Builds nicht richtig gerendert?\n\nSie sollten jedoch nicht eine `createGenerateClassName()` Funktion zwischen verschiedenen Anfragen teilen: Sie m\xfcssen f\xfcr jede Anforderung einen neuen Klassennamengenerator bereitstellen.\n\nTo correct this issue, all components on the page need to be initialized such that there is only ever **one class name generator** among them.\n\nIn einer Reihe von Szenarien k\xf6nnten Sie versehentlich zwei Klassennamengeneratoren verwenden:\n\n- Sie **b\xfcndeln**versehentlich zwei Versionen von Material-UI. M\xf6glicherweise hat eine Abh\xe4ngigkeit die Material-UI nicht korrekt als Peer-Abh\xe4ngigkeit.\n- You are using `StylesProvider` for a **subset** of your React tree.\n- Sie verwenden einen Bundler und der Code wird so aufgeteilt, dass mehrere Klassennamengenerator-Instanzen erstellt werden.\n\n> Wenn Sie Webpack mit dem [SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/) verwenden, versuchen Sie, den [`RuntimeChunk` Einstellung unter `Optimierungen`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk) zu konfigurieren.\n\nOverall, it\'s simple to recover from this problem by wrapping each Material-UI application with [`StylesProvider`](/styles/api/#stylesprovider) components at the top of their component trees **and using a single class name generator shared among them**.\n\n## Warum bewegen sich die fest positionierten Elemente, wenn ein Modal ge\xf6ffnet wird?\n\nScrolling is blocked as soon as a modal is opened. This prevents interacting with the background when the modal should be the only interactive content. However, removing the scrollbar can make your **fixed positioned elements** move. In dieser Situation k\xf6nnen Sie einen globalen `.mui-fixed` Klassennamen anwenden, damit Material-UI mit diesen Elementen umgehen kann.\n\n## Wie kann ich den Ripple-Effekt global deaktivieren?\n\nDer Ripple-Effekt kommt ausschlie\xdflich von der `BaseButton` Komponente. Sie k\xf6nnen den Ripple-Effekt global deaktivieren, indem Sie in Ihrem Theme folgendes angeben:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // Name of the component \u269b\ufe0f\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application \ud83d\udca3!\n    },\n  },\n});\n```\n\n## Wie kann ich \xdcberg\xe4nge global deaktivieren?\n\nMaterial-UI uses the same theme helper for creating all its transitions. Therefore you can disable all transitions by overriding the helper in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // Jetzt haven wir \xfcberall `transition: none;`\n    create: () => \'none\',\n  },\n});\n```\n\nIt can be useful to disable transitions during visual testing or to improve performance on low-end devices.\n\nYou can go one step further by disabling all transitions and animations effects:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // Name of the component \u269b\ufe0f\n    MuiCssBaseline: {\n      // Name of the rule\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\nNotice that the usage of `CssBaseline` is required for the above approach to work. If you choose not to use it, you can still disable transitions and animations by including these CSS rules:\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## Muss ich JSS verwenden, um meine App zu stylen?\n\nNo, it\'s not required. But this dependency comes built in, so carries no additional bundle size overhead.\n\nPerhaps, however, you\'re adding some Material-UI components to an app that already uses another styling solution, or are already familiar with a different API, and don\'t want to learn a new one? In diesem Fall gehen Sie zum [Zusammenf\xfchren von Style Libraries](/guides/interoperability/) Abschnitt in dem wir zeigen, wie einfach es ist, Material-UI-Komponenten mit alternativen Stilbibliotheken umzustrukturieren.\n\n## Wann verwende ich inline-style vs CSS?\n\nVerwenden Sie als Faustregel Inline-Style nur f\xfcr dynamische Stileigenschaften. Die CSS-Alternative bietet weitere Vorteile, z.B.:\n\n- Auto-Pr\xe4fixe\n- Besseres debuggen\n- Medien-Anfragen\n- Keyframes\n\n## Wie verwende ich den react-router?\n\nWe detail the [integration with third-party routing libraries](/guides/composition/#routing-libraries) like react-router, Gatsby or Next.js in our guide.\n\n## Wie kann ich auf das DOM-Element zugreifen?\n\nAlle Material-UI-Komponenten, die etwas im DOM darstellen sollen, leiten ihre an die zugrunde liegende DOM-Komponente weiter. Dies bedeutet, dass Sie die DOM-Elemente, indem Sie den ref lesen, der an die Komponenten der Material-UI angeh\xe4ngt ist:\n\n```jsx\n// oder eine Ref-Setter-Funktion\nconst ref = React.createRef ();\n// Rendern\n<0 />;\n// Verwendung\nconst Element = ref.current;\n```\n\nIf you\'re not sure if the Material-UI component in question forwards its ref you can check the API documentation under "Props" e.g. the [Button API](/api/button/#props) includes\n\n> Der ref wird an das Wurzelelement weitergeleitet.\n\nwas anzeigt, dass Sie mit einem ref auf das DOM-Element zugreifen k\xf6nnen.\n\n## Ich habe mehrere Instanzen von Stilen auf der Seite\n\nWenn in der Konsole eine Warnmeldung wie die folgende angezeigt wird, haben Sie wahrscheinlich mehrere Instanzen von `@material-ui/styles` auf der Seite initialisiert.\n\n> It looks like there are several instances of `@material-ui/styles` initialized in this application. This may cause theme propagation issues, broken class names, specificity issues, and make your application bigger without a good reason.\n\n### M\xf6gliche Gr\xfcnde\n\nDaf\xfcr gibt es mehrere h\xe4ufige Gr\xfcnde:\n\n- Sie haben eine andere `@material-ui/styles` Bibliothek irgendwo in Ihren Abh\xe4ngigkeiten.\n- One possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file.\n- Wenn Sie mehrere Anwendungen auf einer Seite ausf\xfchren, sollten Sie ein @material-ui/styles-Modul f\xfcr alle verwenden.\n\n### Dupliziertes Modul in node_modules\n\nSie k\xf6nnen die `npm ls @material-ui/styles`, `yarn list @material-ui/styles` oder `find -L ./node_modules | grep /@material-ui/styles/package.json` Befehle in Ihrem Anwendungsordner ausf\xfchren. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\nWenn keiner dieser Befehle die Duplizierung identifiziert, analysieren Sie Ihr Bundle auf mehrere Instanzen von @material-ui/styles. Sie k\xf6nnen einfach Ihre Bundle-Quelle \xfcberpr\xfcfen oder ein Tool wie [source-map-explorer verwenden](https://github.com/danvk/source-map-explorer) oder [Webpack-Bundle-Analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer).\n\nWenn Sie festgestellt haben, dass Duplizierung das Problem ist, k\xf6nnen sie mehrere Dinge ausprobieren, um dies zu l\xf6sen:\n\nWenn Sie npm verwenden, k\xf6nnen Sie versuchen, `npm dedupe` auszuf\xfchren. Dieser Befehl durchsucht die lokalen Abh\xe4ngigkeiten und versucht, die Struktur zu vereinfachen, indem allgemeine Abh\xe4ngigkeiten weiter nach oben verschoben werden.\n\nWenn Sie das Webpack verwenden, k\xf6nnen Sie die Art und Weise \xe4ndern, in der das @material-ui/styles Modul [aufgel\xf6st wird](https://webpack.js.org/configuration/resolve/#resolve-modules). Sie k\xf6nnen die Standardreihenfolge \xfcberschreiben, in der Webpack nach Abh\xe4ngigkeiten sucht, und die Priorit\xe4t Ihrer "node_modules" in Ihrer Anwendung gegen\xfcber der Standardreihenfolge f\xfcr die Aufl\xf6sung von Knotenmodulen erh\xf6hen:\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### Verwendung mit Lerna\n\nOne possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file. Versuchen Sie, die Bootstrap-Option mit dem Flag --hoist auszuf\xfchren.\n\n```sh\nlerna bootstrap --hoist\n```\n\nAlternativ k\xf6nnen Sie @material-ui/styles aus Ihrer package.json-Datei entfernen und manuell in Ihre package.json-Datei an der obersten Ebene einf\xfcgen.\n\nBeispiel f\xfcr eine package.json-Datei in einem Lerna-Stammverzeichnis\n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### Mehrere Anwendungen auf einer Seite ausf\xfchren\n\nSie haben mehrere Anwendungen, die `@material-ui/styles` verwenden, und auf derselben Seite ausgef\xfchrt werden (z. Wenn Sie Webpack verwenden, k\xf6nnen Sie das [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/) verwenden. So erstellen Sie einen expliziten [vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), das das Modul @ material-ui/styles enth\xe4lt:\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## Meine App wird auf dem Server nicht richtig dargestellt\n\nWenn dies nicht funktioniert, handelt es sich in 99% der F\xe4lle um ein Konfigurationsproblem. A missing property, a wrong call order, or a missing component \u2013 server-side rendering is strict about configuration, and the best way to find out what\'s wrong is to compare your project to an already working setup. Check out the [reference implementations](/guides/server-rendering/#reference-implementations), bit by bit.\n\n### CSS funktioniert nur beim ersten Laden, dann fehlt es\n\nDas CSS wird nur beim ersten Laden der Seite generiert. Auf dem Server fehlt dann das CSS bei aufeinanderfolgende Anfragen.\n\n#### Zu ergreifende Ma\xdfnahmen\n\nThe styling solution relies on a cache, the *sheets manager*, to only inject the CSS once per component type (if you use two buttons, you only need the CSS of the button one time). Sie m\xfcssen **eine neue `sheets`Instanze f\xfcr jede Anfrage** erstellen.\n\n*beispiel f\xfcr fix:*\n\n```diff\n-const sheets = new ServerStyleSheets();\n\nfunction handleRender(req, res) {\n\n+ // Eine Sheet Instanz erstellen.\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // Rendern des Komponenten als String.\nconst html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n\n  - // Eine Sheet Instanz erstellen.\n```\n\n### React Klassenname Hydratation Nicht\xfcbereinstimmung\n\nEs gibt eine Nicht\xfcbereinstimmung der Klassennamen zwischen Client und Server. Es k\xf6nnte f\xfcr die erste Anfrage funktionieren. Ein anderes Symptom ist, dass sich das Styling zwischen dem Laden der ersten Seite und dem Herunterladen der Clientskripte \xe4ndert.\n\n#### Zu ergreifende Ma\xdfnahmen\n\nDer Klassennamenwert basiert auf dem Konzept des [Klassennamensgenerators](/styles/advanced/#class-names). Die gesamte Seite muss mit **einem einzigen Generator** gerendert werden. Dieser Generator muss sich auf dem Server und auf dem Client identisch verhalten. Zum Beispiel:\n\n- Sie m\xfcssen f\xfcr jede Anforderung einen neuen Klassennamengenerator bereitstellen. Sie sollten jedoch nicht eine `createGenerateClassName()` Funktion zwischen verschiedenen Anfragen teilen:\n\n*beispiel f\xfcr fix:*\n\n```diff\n- // Erstellen Sie einen neuen Klassennamengenerator.\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n\n+ // Erstellt einen neuen Klassennamengenerator.\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // Render der Komponente als String.\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n\n  - // Eine Sheet Instanz erstellen.\n```\n\n- Sie m\xfcssen sicherstellen, dass auf Ihrem Client und Server die **exakt dieselbe Version** von Material-UI ausf\xfchren. Es kann vorkommen, dass eine Nicht\xfcbereinstimmung von selbst kleinerer Versionen zu Stilproblemen f\xfchren kann. Um die Versionsnummern zu \xfcberpr\xfcfen, f\xfchren Sie `npm list@material-ui/core` in der Umgebung aus, in der Sie Ihre Anwendung erstellen, und in Ihrer Implementierungsumgebung.\n  \n    Sie k\xf6nnen die gleiche Version in verschiedenen Umgebungen festlegen, indem Sie in den Abh\xe4ngigkeiten Ihrer package.json eine bestimmte MUI-Version angeben.\n\n*beispiel f\xfcr fix (package.json):*\n\n```diff\n  "dependencies": {\n    ...\n\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- Sie m\xfcssen sicherstellen, dass Server und Client denselben `process.env.NODE_ENV verwenden` Wert haben.\n\n## Warum unterscheiden sich die Farben, die ich sehe, von denen, die ich hier sehe?\n\nDie Dokumentationssite verwendet ein benutzerdefiniertes Theme. Daher unterscheidet sich die Farbpalette vom Standarddesign der Material-UI. Siehe [diese Seite](/customization/theming/), um Informationen zum Anpassen von Motiven zu erhalten.\n\n## Warum erfordert Komponente X einen DOM-Knoten in einer Eigenschaft anstelle eines Ref-Objekts?\n\nKomponenten wie das [Portal](/api/portal/#props) oder [Popper](/api/popper/#props) erfordern jeweils einen DOM-Knoten in der `container` oder `anchorEl` Eigenschaft. Es erscheint zweckm\xe4\xdfig, in diesen Eigenschaften einfach ein ref-Objekt zu \xfcbergeben und Material-UI auf den aktuellen Wert zugreifen zu lassen. Dies funktioniert in einem einfachen Szenario:\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>portaled children</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\nwo `Portal` die Kinder nur dann in den Container einh\xe4ngen w\xfcrde, wenn `container.current` verf\xfcgbar ist. Hier ist eine naive Implementierung von Portal:\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\nMit diesem einfaches heuristischen `Portal` wird es nach dem Einh\xe4ngen m\xf6glicherweise erneut gerendert, da die Refs vor der Ausf\xfchrung von Effekten auf dem neuesten Stand sind. Nur weil ein Ref aktuell ist, bedeutet das nicht, dass er auf eine definierte Instanz verweist. Wenn der ref an eine ref-Weiterleitungskomponente angeh\xe4ngt ist, ist nicht klar, wann der DOM-Knoten verf\xfcgbar ist. This is especially apparent for React.lazy components in Suspense. Die obige Implementierung k\xf6nnte auch keine \xc4nderung im DOM-Knoten ber\xfccksichtigen. In the example above, the `Portal` would run an effect once, but might not re-render because `ref.current` is still `null`.\n\nAus diesem Grund ben\xf6tigen wir eine Eigenschaft mit dem eigentlichen DOM-Knoten, damit React ermitteln kann, wann das `Portal` neu gerendert werden soll:\n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Portaled</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## What\'s the clsx dependency for?\n\n[clsx](https://github.com/lukeed/clsx) is a tiny utility for constructing `className` strings conditionally, out of an object with keys being the class strings, and values being booleans.\n\nInstead of writing:\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? // let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ?\n```\n\nyou can do:\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```'},z8jo:function(e,n){e.exports='# FAQ\n\n<p class="description">Bloqu\xe9 sur un probl\xe8me particulier ? V\xe9rifiez les solutions propos\xe9es dans la FAQ.</p>\n\nSi vous ne pouvez toujours pas trouver ce que vous cherchez, vous pouvez consulter notre [page de support](/getting-started/support/).\n\n## Material-UI est g\xe9nial. Comment puis-je soutenir le projet?\n\nIl y a plusieurs fa\xe7ons de soutenir Material-UI :\n\n- **Faites passer le mot**. \xc9vang\xe9liser Material-UI en affichant un [lien vers material-ui.com](https://mui.com/) sur votre site web, chaque lien compte. Suivez-nous sur [Twitter](https://twitter.com/MaterialUI), aimer et retweeter les nouvelles importantes. Ou parlez simplement de nous avec vos amis.\n- **donnez nous vos retours**. Dites-nous ce que nous faisons bien ou ce que nous pouvons am\xe9liorer. Merci de voter \ud83d\udc4d les probl\xe8mes qui vous voudriez le plus voir r\xe9solus.\n- **Aidez les nouveaux utilisateurs**. You can answer questions on [StackOverflow](https://stackoverflow.com/questions/tagged/material-ui).\n- **Apportez des modifications**. \n  - Modifiez la documentation. Chaque page a un lien "\xc9DITER CETTE PAGE" en haut \xe0 droite.\n  - Signaler des bugs ou des fonctionnalit\xe9s manquantes en [cr\xe9ant un ticket](https://github.com/mui-org/material-ui/issues/new).\n  - R\xe9viser et commenter les [pull requests](https://github.com/mui-org/material-ui/pulls) existantes et les [tickets](https://github.com/mui-org/material-ui/issues).\n  - Aidez \xe0 [traduire](https://translate.material-ui.com) la documentation.\n  - [Am\xe9liorez notre documentation](https://github.com/mui-org/material-ui/tree/master/docs), corrigez des bugs ou ajoutez des fonctionnalit\xe9s en soumettant une [pull request](https://github.com/mui-org/material-ui/pulls).\n- **Soutenez nous financi\xe8rement sur [OpenCollective](https://opencollective.com/material-ui)**. Si vous utilisez Material-UI dans un projet commercial et que vous souhaitez soutenir son d\xe9veloppement continu en devenant Sponsor, ou dans un projet parall\xe8le ou hobby et aimeriez devenir un Backer, vous pouvez le faire via OpenCollective. Tous les fonds donn\xe9s sont g\xe9r\xe9s de mani\xe8re transparente et les Sponsors re\xe7oivent une reconnaissance dans le README et sur la page d\'accueil de Material-UI.\n\n## Pourquoi est-ce que mes composants ne s\'affichent pas correctement en production ?\n\nBut you shouldn\'t share a `createGenerateClassName()` between different requests: You need to provide a new class name generator for each request.\n\nTo correct this issue, all components on the page need to be initialized such that there is only ever **one class name generator** among them.\n\nYou could end up accidentally using two class name generators in a variety of scenarios:\n\n- You accidentally **bundle** two versions of Material-UI. You might have a dependency not correctly setting Material-UI as a peer dependency.\n- You are using `StylesProvider` for a **subset** of your React tree.\n- You are using a bundler and it is splitting code in a way that causes multiple class name generator instances to be created.\n\n> If you are using webpack with the [SplitChunksPlugin](https://webpack.js.org/plugins/split-chunks-plugin/), try configuring the [`runtimeChunk` setting under `optimizations`](https://webpack.js.org/configuration/optimization/#optimization-runtimechunk).\n\nOverall, it\'s simple to recover from this problem by wrapping each Material-UI application with [`StylesProvider`](/styles/api/#stylesprovider) components at the top of their component trees **and using a single class name generator shared among them**.\n\n## Why do the fixed positioned elements move when a modal is opened?\n\nScrolling is blocked as soon as a modal is opened. This prevents interacting with the background when the modal should be the only interactive content. However, removing the scrollbar can make your **fixed positioned elements** move. In this situation, you can apply a global `.mui-fixed` class name to tell Material-UI to handle those elements.\n\n## How can I disable the ripple effect globally?\n\nThe ripple effect is exclusively coming from the `BaseButton` component. You can disable the ripple effect globally by providing the following in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  props: {\n    // Name of the component \u269b\ufe0f\n    MuiButtonBase: {\n      // The properties to apply\n      disableRipple: true, // No more ripple, on the whole application \ud83d\udca3!\n    },\n  },\n});\n```\n\n## How can I disable transitions globally?\n\nMaterial-UI uses the same theme helper for creating all its transitions. Therefore you can disable all transitions by overriding the helper in your theme:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  transitions: {\n    // So we have `transition: none;` everywhere\n    create: () => \'none\',\n  },\n});\n```\n\nIt can be useful to disable transitions during visual testing or to improve performance on low-end devices.\n\nYou can go one step further by disabling all transitions and animations effects:\n\n```js\nimport { createTheme } from \'@material-ui/core\';\n\nconst theme = createTheme({\n  overrides: {\n    // Name of the component \u269b\ufe0f\n    MuiCssBaseline: {\n      // Name of the rule\n      \'@global\': {\n        \'*, *::before, *::after\': {\n          transition: \'none !important\',\n          animation: \'none !important\',\n        },\n      },\n    },\n  },\n});\n```\n\nNotice that the usage of `CssBaseline` is required for the above approach to work. If you choose not to use it, you can still disable transitions and animations by including these CSS rules:\n\n```css\n*, *::before, *::after {\n  transition: \'none !important\';\n  animation: \'none !important\';\n}\n```\n\n## Do I have to use JSS to style my app?\n\nNo, it\'s not required. But this dependency comes built in, so carries no additional bundle size overhead.\n\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\n## When should I use inline-style vs CSS?\n\nAs a rule of thumb, only use inline-style for dynamic style properties. The CSS alternative provides more advantages, such as:\n\n- auto-prefixing\n- better debugging\n- media queries\n- keyframes\n\n## How do I use react-router?\n\nWe detail the [integration with third-party routing libraries](/guides/composition/#routing-libraries) like react-router, Gatsby or Next.js in our guide.\n\n## How can I access the DOM element?\n\nAll Material-UI components that should render something in the DOM forward their ref to the underlying DOM component. This means that you can get DOM elements by reading the ref attached to Material-UI components:\n\n```jsx\n// or a ref setter function\nconst ref = React.createRef();\n// render\n<Button ref={ref} />;\n// usage\nconst element = ref.current;\n```\n\nIf you\'re not sure if the Material-UI component in question forwards its ref you can check the API documentation under "Props" e.g. the [Button API](/api/button/#props) includes\n\n> The ref is forwarded to the root element.\n\nindicating that you can access the DOM element with a ref.\n\n## I have several instances of styles on the page\n\nIf you are seeing a warning message in the console like the one below, you probably have several instances of `@material-ui/styles` initialized on the page.\n\n> It looks like there are several instances of `@material-ui/styles` initialized in this application. This may cause theme propagation issues, broken class names, specificity issues, and make your application bigger without a good reason.\n\n### Possible reasons\n\nThere are several common reasons for this to happen:\n\n- You have another `@material-ui/styles` library somewhere in your dependencies.\n- You have a monorepo structure for your project (e.g, lerna, yarn workspaces) and `@material-ui/styles` module is a dependency in more than one package (this one is more or less the same as the previous one).\n- You have several applications that are using `@material-ui/styles` running on the same page (e.g., several entry points in webpack are loaded on the same page).\n\n### Duplicated module in node_modules\n\nYou can use `npm ls @material-ui/styles`, `yarn list @material-ui/styles` or `find -L ./node_modules | grep /@material-ui/styles/package.json` commands in your application folder. If you think that the issue may be in the duplication of the @material-ui/styles module somewhere in your dependencies, there are several ways to check this.\n\nIf none of these commands identified the duplication, try analyzing your bundle for multiple instances of @material-ui/styles. You can just check your bundle source, or use a tool like [source-map-explorer](https://github.com/danvk/source-map-explorer) or [webpack-bundle-analyzer](https://github.com/webpack-contrib/webpack-bundle-analyzer).\n\nIf you identified that duplication is the issue that you are encountering there are several things you can try to solve it:\n\nIf you are using npm you can try running `npm dedupe`. This command searches the local dependencies and tries to simplify the structure by moving common dependencies further up the tree.\n\nIf you are using webpack, you can change the way it will [resolve](https://webpack.js.org/configuration/resolve/#resolve-modules) the @material-ui/styles module. You can overwrite the default order in which webpack will look for your dependencies and make your application node_modules more prioritized than default node module resolution order:\n\n```diff\n  resolve: {\n+   alias: {\n+     "@material-ui/styles": path.resolve(appFolder, "node_modules", "@material-ui/styles"),\n+   }\n  }\n```\n\n### Usage with Lerna\n\nOne possible fix to get @material-ui/styles to run in a Lerna monorepo across packages is to [hoist](https://github.com/lerna/lerna/blob/master/doc/hoist.md) shared dependencies to the root of your monorepo file. Try running the bootstrap option with the --hoist flag.\n\n```sh\nlerna bootstrap --hoist\n```\n\nAlternatively, you can remove @material-ui/styles from your package.json file and hoist it manually to your top-level package.json file.\n\nExample of a package.json file in a Lerna root folder\n\n```json\n{\n  "name": "my-monorepo",\n  "devDependencies": {\n    "lerna": "latest"\n  },\n  "dependencies": {\n    "@material-ui/styles": "^4.0.0"\n  },\n  "scripts": {\n    "bootstrap": "lerna bootstrap",\n    "clean": "lerna clean",\n    "start": "lerna run start",\n    "build": "lerna run build"\n  }\n}\n```\n\n### Running multiple applications on one page\n\nIf you have several applications running on one page, consider using one @material-ui/styles module for all of them. If you are using webpack, you can use [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/) to create an explicit [vendor chunk](https://webpack.js.org/plugins/commons-chunk-plugin/#explicit-vendor-chunk), that will contain the @material-ui/styles module:\n\n```diff\n  module.exports = {\n    entry: {\n+     vendor: ["@material-ui/styles"],\n      app1: "./src/app.1.js",\n      app2: "./src/app.2.js",\n    },\n    plugins: [\n+     new webpack.optimize.CommonsChunkPlugin({\n+       name: "vendor",\n+       minChunks: Infinity,\n+     }),\n    ]\n  }\n```\n\n## My App doesn\'t render correctly on the server\n\nIf it doesn\'t work, in 99% of cases it\'s a configuration issue. A missing property, a wrong call order, or a missing component \u2013 server-side rendering is strict about configuration, and the best way to find out what\'s wrong is to compare your project to an already working setup. Check out the [reference implementations](/guides/server-rendering/#reference-implementations), bit by bit.\n\n### CSS works only on first load then is missing\n\nThe CSS is only generated on the first load of the page. Then, the CSS is missing on the server for consecutive requests.\n\n#### Action to Take\n\nThe styling solution relies on a cache, the *sheets manager*, to only inject the CSS once per component type (if you use two buttons, you only need the CSS of the button one time). You need to create **a new `sheets` instance for each request**.\n\n*example of fix:*\n\n```diff\n-const sheets = new ServerStyleSheets();\n\nfunction handleRender(req, res) {\n\n+ // Create a sheets instance.\n+ const sheets = new ServerStyleSheets();\n\n  //\u2026\n\n  // Render the component to a string.\nconst html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  -// Create a sheets instance.\n```\n\n### React class name hydration mismatch\n\nThere is a class name mismatch between the client and the server. It might work for the first request. Another symptom is that the styling changes between initial page load and the downloading of the client scripts.\n\n#### Action to Take\n\nThe class names value relies on the concept of [class name generator](/styles/advanced/#class-names). The whole page needs to be rendered with **a single generator**. This generator needs to behave identically on the server and on the client. Par exemple:\n\n- You need to provide a new class name generator for each request. But you shouldn\'t share a `createGenerateClassName()` between different requests:\n\n*example of fix:*\n\n```diff\n-// Create a new class name generator.\n-const generateClassName = createGenerateClassName();\n\nfunction handleRender(req, res) {\n\n+ // Create a new class name generator.\n+ const generateClassName = createGenerateClassName();\n\n  //\u2026\n\n  // Render the component to a string.\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  const html = ReactDOMServer.renderToString(\n  -// Create a sheets instance.\n```\n\n- You need to verify that your client and server are running the **exactly the same version** of Material-UI. It is possible that a mismatch of even minor versions can cause styling problems. To check version numbers, run `npm list @material-ui/core` in the environment where you build your application and also in your deployment environment.\n  \n    You can also ensure the same version in different environments by specifying a specific MUI version in the dependencies of your package.json.\n\n*example of fix (package.json):*\n\n```diff\n  "dependencies": {\n    ...\n\n-   "@material-ui/core": "^4.0.0",\n+   "@material-ui/core": "4.0.0",\n    ...\n  },\n```\n\n- You need to make sure that the server and the client share the same `process.env.NODE_ENV` value.\n\n## Why are the colors I am seeing different from what I see here?\n\nThe documentation site is using a custom theme. Hence, the color palette is different from the default theme that Material-UI ships. Please refer to [this page](/customization/theming/) to learn about theme customization.\n\n## Why does component X require a DOM node in a prop instead of a ref object?\n\nComponents like the [Portal](/api/portal/#props) or [Popper](/api/popper/#props) require a DOM node in the `container` or `anchorEl` prop respectively. It seems convenient to simply pass a ref object in those props and let Material-UI access the current value. This works in a simple scenario:\n\n```jsx\nfunction App() {\n  const container = React.useRef(null);\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>portaled children</span>\n      </Portal>\n      <div ref={container} />\n    </div>\n  );\n}\n```\n\nwhere `Portal` would only mount the children into the container when `container.current` is available. Here is a naive implementation of Portal:\n\n```jsx\nfunction Portal({ children, container }) {\n  const [node, setNode] = React.useState(null);\n\n  React.useEffect(() => {\n    setNode(container.current);\n  }, [container]);\n\n  if (node === null) {\n    return null;\n  }\n  return ReactDOM.createPortal(children, node);\n}\n```\n\nWith this simple heuristic `Portal` might re-render after it mounts because refs are up-to-date before any effects run. However, just because a ref is up-to-date doesn\'t mean it points to a defined instance. If the ref is attached to a ref forwarding component it is not clear when the DOM node will be available. The above implementation could also not account for a change in the DOM node. In the example above, the `Portal` would run an effect once, but might not re-render because `ref.current` is still `null`. This is especially apparent for React.lazy components in Suspense.\n\nThis is why we require a prop with the actual DOM node so that React can take care of determining when the `Portal` should re-render:\n\n```jsx\nfunction App() {\n  const [container, setContainer] = React.useState(null);\n  const handleRef = React.useCallback(instance => setContainer(instance), [setContainer])\n\n  return (\n    <div className="App">\n      <Portal container={container}>\n        <span>Portaled</span>\n      </Portal>\n      <div ref={handleRef} />\n    </div>\n  );\n}\n```\n\n## What\'s the clsx dependency for?\n\n[clsx](https://github.com/lukeed/clsx) is a tiny utility for constructing `className` strings conditionally, out of an object with keys being the class strings, and values being booleans.\n\nInstead of writing:\n\n```jsx\n// let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? // let disabled = false, selected = true;\n\nreturn (\n  <div\n    className={`MuiButton-root ${disabled ? \'Mui-disabled\' : \'\'} ${selected ?\n```\n\nyou can do:\n\n```jsx\nimport clsx from \'clsx\';\n\nreturn (\n  <div\n    className={clsx(\'MuiButton-root\', {\n      \'Mui-disabled\': disabled,\n      \'Mui-selected\': selected,\n    })}\n  />\n);\n```'}},[["HKYD",0,2,1,3,4,5,6,7,8,9,10,11,12,15,14,13,16,17,18]]]);